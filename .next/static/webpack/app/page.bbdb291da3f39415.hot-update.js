"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/Header.tsx":
/*!***************************************!*\
  !*** ./src/app/components/Header.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _telegram_apps_sdk_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @telegram-apps/sdk-react */ \"(app-pages-browser)/./node_modules/@telegram-apps/sdk-react/dist/index.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _styles_header_module_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/header.module.css */ \"(app-pages-browser)/./src/app/styles/header.module.css\");\n/* harmony import */ var _styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _barrel_optimize_names_FaGear_react_icons_fa6__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=FaGear!=!react-icons/fa6 */ \"(app-pages-browser)/./node_modules/react-icons/fa6/index.mjs\");\n/* harmony import */ var _Exchanges__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Exchanges */ \"(app-pages-browser)/./src/app/components/Exchanges.tsx\");\n/* harmony import */ var _Settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Settings */ \"(app-pages-browser)/./src/app/components/Settings.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst initData = (0,_telegram_apps_sdk_react__WEBPACK_IMPORTED_MODULE_6__.useInitData)();\nconst Header = (param)=>{\n    let { className = \"\" } = param;\n    _s();\n    const user = initData.user;\n    const [selectedExchange, setSelectedExchange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [exchanges, setExchanges] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const toggleExchangesDisplay = ()=>{\n        setExchanges((prev)=>!prev);\n    };\n    const handleExchangeSelect = (exchange)=>{\n        setSelectedExchange(exchange);\n        setExchanges(false); // Hide dropdown when a language is selected\n    };\n    const toggleSettings = ()=>{\n        setSettings((prev)=>!prev);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            exchanges && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Exchanges__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                selectedexchange: selectedExchange,\n                toggleDisplay: toggleExchangesDisplay,\n                onExchangeSelect: handleExchangeSelect\n            }, void 0, false, {\n                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                lineNumber: 41,\n                columnNumber: 27\n            }, undefined),\n            settings && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Settings__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                toggleDisplay: toggleSettings\n            }, void 0, false, {\n                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                lineNumber: 42,\n                columnNumber: 26\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().head),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().profile),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                src: \"/frdlogo300.png\",\n                                alt: \"user profile\",\n                                width: 30,\n                                height: 30,\n                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().pimage)\n                            }, void 0, false, {\n                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                lineNumber: 45,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().badge),\n                                children: [\n                                    user === null || user === void 0 ? void 0 : user.firstName,\n                                    \" (Gamer Supa)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                        className: [\n                            (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().userinfo),\n                            className\n                        ].join(\" \"),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().level),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().levelTitle),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().currentLevel),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().epic),\n                                                        children: \"Epic\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 52,\n                                                        columnNumber: 33\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().levelIcon),\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                            className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().levelImageIcon),\n                                                            loading: \"lazy\",\n                                                            alt: \"\",\n                                                            src: \"/vector-1.svg\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                            lineNumber: 54,\n                                                            columnNumber: 37\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 53,\n                                                        columnNumber: 33\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                lineNumber: 51,\n                                                columnNumber: 29\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().level610),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: \"Level \"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 63,\n                                                        columnNumber: 33\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().span),\n                                                        children: \"6/10\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 64,\n                                                        columnNumber: 33\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                lineNumber: 62,\n                                                columnNumber: 29\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                        lineNumber: 50,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().rectangleParent),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().frameChild)\n                                            }, void 0, false, {\n                                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                lineNumber: 68,\n                                                columnNumber: 29\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().levelBackground)\n                                            }, void 0, false, {\n                                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                lineNumber: 69,\n                                                columnNumber: 29\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                        lineNumber: 67,\n                                        columnNumber: 25\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                lineNumber: 49,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().details),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        type: \"button\",\n                                        onClick: toggleExchangesDisplay,\n                                        style: {\n                                            border: \"none\",\n                                            backgroundColor: \"none\"\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            src: \"/union-2.svg\",\n                                            alt: \"pic\"\n                                        }, void 0, false, {\n                                            fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                            lineNumber: 75,\n                                            columnNumber: 29\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                        lineNumber: 74,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().b_earn),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                children: \"profit per hour\"\n                                            }, void 0, false, {\n                                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                lineNumber: 78,\n                                                columnNumber: 29\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().bst_earn),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                            src: \"/group-9-2.svg\",\n                                                            alt: \"img\",\n                                                            className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().bimg)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                            lineNumber: 80,\n                                                            columnNumber: 38\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 80,\n                                                        columnNumber: 33\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: \"+680\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 81,\n                                                        columnNumber: 33\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                            src: \"/group-9-2.svg\",\n                                                            alt: \"img\",\n                                                            className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().bimg)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                            lineNumber: 82,\n                                                            columnNumber: 38\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                        lineNumber: 82,\n                                                        columnNumber: 33\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                                lineNumber: 79,\n                                                columnNumber: 29\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                        lineNumber: 77,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaGear_react_icons_fa6__WEBPACK_IMPORTED_MODULE_7__.FaGear, {\n                                            size: 22,\n                                            className: (_styles_header_module_css__WEBPACK_IMPORTED_MODULE_3___default().settingsicon),\n                                            onClick: toggleSettings\n                                        }, void 0, false, {\n                                            fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                            lineNumber: 86,\n                                            columnNumber: 29\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                        lineNumber: 85,\n                                        columnNumber: 25\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                                lineNumber: 73,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Applications/XAMPP/xamppfiles/htdocs/frdbotapp/frontend/src/app/components/Header.tsx\",\n                lineNumber: 43,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(Header, \"9bXRw/877FepwchCA56PbXYzlgw=\");\n_c = Header;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Header);\nvar _c;\n$RefreshReg$(_c, \"Header\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/Header.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@telegram-apps/sdk-react/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@telegram-apps/sdk-react/dist/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BackButton: function() { return /* binding */ Ve; },\n/* harmony export */   BasicNavigator: function() { return /* binding */ Os; },\n/* harmony export */   BiometryManager: function() { return /* binding */ ze; },\n/* harmony export */   BrowserNavigator: function() { return /* binding */ ee; },\n/* harmony export */   ClosingBehavior: function() { return /* binding */ Fe; },\n/* harmony export */   CloudStorage: function() { return /* binding */ ts; },\n/* harmony export */   ERR_INVALID_PATH_BASE: function() { return /* binding */ ye; },\n/* harmony export */   ERR_INVOKE_CUSTOM_METHOD_RESPONSE: function() { return /* binding */ ge; },\n/* harmony export */   ERR_METHOD_PARAMETER_UNSUPPORTED: function() { return /* binding */ _e; },\n/* harmony export */   ERR_METHOD_UNSUPPORTED: function() { return /* binding */ de; },\n/* harmony export */   ERR_NAVIGATION_HISTORY_EMPTY: function() { return /* binding */ me; },\n/* harmony export */   ERR_NAVIGATION_INDEX_INVALID: function() { return /* binding */ ve; },\n/* harmony export */   ERR_NAVIGATION_ITEM_INVALID: function() { return /* binding */ bn; },\n/* harmony export */   ERR_PARSE: function() { return /* binding */ xt; },\n/* harmony export */   ERR_SSR_INIT: function() { return /* binding */ mn; },\n/* harmony export */   ERR_TIMED_OUT: function() { return /* binding */ fe; },\n/* harmony export */   ERR_UNEXPECTED_TYPE: function() { return /* binding */ be; },\n/* harmony export */   ERR_UNKNOWN_ENV: function() { return /* binding */ we; },\n/* harmony export */   EventEmitter: function() { return /* binding */ D; },\n/* harmony export */   HapticFeedback: function() { return /* binding */ ss; },\n/* harmony export */   InitData: function() { return /* binding */ rs; },\n/* harmony export */   Invoice: function() { return /* binding */ os; },\n/* harmony export */   MainButton: function() { return /* binding */ cs; },\n/* harmony export */   MiniApp: function() { return /* binding */ ls; },\n/* harmony export */   Popup: function() { return /* binding */ ws; },\n/* harmony export */   QRScanner: function() { return /* binding */ fs; },\n/* harmony export */   SDKError: function() { return /* binding */ W; },\n/* harmony export */   SDKProvider: function() { return /* binding */ ur; },\n/* harmony export */   SettingsButton: function() { return /* binding */ ms; },\n/* harmony export */   SwipeBehavior: function() { return /* binding */ ys; },\n/* harmony export */   ThemeParams: function() { return /* binding */ Ps; },\n/* harmony export */   Utils: function() { return /* binding */ Rs; },\n/* harmony export */   Viewport: function() { return /* binding */ Cs; },\n/* harmony export */   array: function() { return /* binding */ Xe; },\n/* harmony export */   bindMiniAppCSSVars: function() { return /* binding */ Sn; },\n/* harmony export */   bindThemeParamsCSSVars: function() { return /* binding */ Rn; },\n/* harmony export */   bindViewportCSSVars: function() { return /* binding */ xn; },\n/* harmony export */   boolean: function() { return /* binding */ E; },\n/* harmony export */   captureSameReq: function() { return /* binding */ qt; },\n/* harmony export */   classNames: function() { return /* binding */ st; },\n/* harmony export */   compareVersions: function() { return /* binding */ Te; },\n/* harmony export */   createBrowserNavigatorFromLocation: function() { return /* binding */ Vs; },\n/* harmony export */   createPostEvent: function() { return /* binding */ Ie; },\n/* harmony export */   createSafeURL: function() { return /* binding */ L; },\n/* harmony export */   date: function() { return /* binding */ Lt; },\n/* harmony export */   getHash: function() { return /* binding */ kn; },\n/* harmony export */   getPathname: function() { return /* binding */ te; },\n/* harmony export */   initBackButton: function() { return /* binding */ je; },\n/* harmony export */   initBiometryManager: function() { return /* binding */ Je; },\n/* harmony export */   initClosingBehavior: function() { return /* binding */ Qe; },\n/* harmony export */   initCloudStorage: function() { return /* binding */ es; },\n/* harmony export */   initHapticFeedback: function() { return /* binding */ ns; },\n/* harmony export */   initInitData: function() { return /* binding */ is; },\n/* harmony export */   initInvoice: function() { return /* binding */ as; },\n/* harmony export */   initMainButton: function() { return /* binding */ hs; },\n/* harmony export */   initMiniApp: function() { return /* binding */ ds; },\n/* harmony export */   initNavigator: function() { return /* binding */ In; },\n/* harmony export */   initPopup: function() { return /* binding */ gs; },\n/* harmony export */   initQRScanner: function() { return /* binding */ bs; },\n/* harmony export */   initSettingsButton: function() { return /* binding */ vs; },\n/* harmony export */   initSwipeBehavior: function() { return /* binding */ Es; },\n/* harmony export */   initThemeParams: function() { return /* binding */ Ss; },\n/* harmony export */   initUtils: function() { return /* binding */ xs; },\n/* harmony export */   initViewport: function() { return /* binding */ Ts; },\n/* harmony export */   initWeb: function() { return /* binding */ As; },\n/* harmony export */   invokeCustomMethod: function() { return /* binding */ V; },\n/* harmony export */   isColorDark: function() { return /* binding */ Bt; },\n/* harmony export */   isIframe: function() { return /* binding */ at; },\n/* harmony export */   isPageReload: function() { return /* binding */ Ft; },\n/* harmony export */   isRGB: function() { return /* binding */ ct; },\n/* harmony export */   isRGBShort: function() { return /* binding */ Oe; },\n/* harmony export */   isSDKError: function() { return /* binding */ Is; },\n/* harmony export */   isSDKErrorOfType: function() { return /* binding */ An; },\n/* harmony export */   isSSR: function() { return /* binding */ ks; },\n/* harmony export */   isTMA: function() { return /* binding */ Cn; },\n/* harmony export */   json: function() { return /* binding */ v; },\n/* harmony export */   mergeClassNames: function() { return /* binding */ yn; },\n/* harmony export */   mockTelegramEnv: function() { return /* binding */ Tn; },\n/* harmony export */   number: function() { return /* binding */ R; },\n/* harmony export */   off: function() { return /* binding */ z; },\n/* harmony export */   on: function() { return /* binding */ y; },\n/* harmony export */   parseInitData: function() { return /* binding */ En; },\n/* harmony export */   parseLaunchParams: function() { return /* binding */ lt; },\n/* harmony export */   parseThemeParams: function() { return /* binding */ Zt; },\n/* harmony export */   postEvent: function() { return /* binding */ B; },\n/* harmony export */   request: function() { return /* binding */ w; },\n/* harmony export */   requestBiometryInfo: function() { return /* binding */ Ke; },\n/* harmony export */   requestThemeParams: function() { return /* binding */ Pn; },\n/* harmony export */   requestViewport: function() { return /* binding */ Xt; },\n/* harmony export */   retrieveLaunchParams: function() { return /* binding */ nt; },\n/* harmony export */   rgb: function() { return /* binding */ De; },\n/* harmony export */   searchParams: function() { return /* binding */ ut; },\n/* harmony export */   serializeLaunchParams: function() { return /* binding */ Ue; },\n/* harmony export */   serializeThemeParams: function() { return /* binding */ Kt; },\n/* harmony export */   setCSSVar: function() { return /* binding */ P; },\n/* harmony export */   setDebug: function() { return /* binding */ ue; },\n/* harmony export */   setTargetOrigin: function() { return /* binding */ vn; },\n/* harmony export */   string: function() { return /* binding */ u; },\n/* harmony export */   subscribe: function() { return /* binding */ he; },\n/* harmony export */   supports: function() { return /* binding */ x; },\n/* harmony export */   targetOrigin: function() { return /* binding */ ke; },\n/* harmony export */   toRGB: function() { return /* binding */ Dt; },\n/* harmony export */   unsubscribe: function() { return /* binding */ Rt; },\n/* harmony export */   urlToPath: function() { return /* binding */ U; },\n/* harmony export */   useBackButton: function() { return /* binding */ Ms; },\n/* harmony export */   useBackButtonRaw: function() { return /* binding */ Bs; },\n/* harmony export */   useBiometryManager: function() { return /* binding */ $s; },\n/* harmony export */   useBiometryManagerRaw: function() { return /* binding */ Ls; },\n/* harmony export */   useClosingBehavior: function() { return /* binding */ Us; },\n/* harmony export */   useClosingBehaviorRaw: function() { return /* binding */ Hs; },\n/* harmony export */   useCloudStorage: function() { return /* binding */ Gs; },\n/* harmony export */   useCloudStorageRaw: function() { return /* binding */ Ws; },\n/* harmony export */   useHapticFeedback: function() { return /* binding */ zs; },\n/* harmony export */   useHapticFeedbackRaw: function() { return /* binding */ js; },\n/* harmony export */   useInitData: function() { return /* binding */ Js; },\n/* harmony export */   useInitDataRaw: function() { return /* binding */ Ks; },\n/* harmony export */   useInvoice: function() { return /* binding */ Qs; },\n/* harmony export */   useInvoiceRaw: function() { return /* binding */ Fs; },\n/* harmony export */   useLaunchParams: function() { return /* binding */ or; },\n/* harmony export */   useMainButton: function() { return /* binding */ Zs; },\n/* harmony export */   useMainButtonRaw: function() { return /* binding */ Ys; },\n/* harmony export */   useMiniApp: function() { return /* binding */ tn; },\n/* harmony export */   useMiniAppRaw: function() { return /* binding */ Xs; },\n/* harmony export */   usePopup: function() { return /* binding */ sn; },\n/* harmony export */   usePopupRaw: function() { return /* binding */ en; },\n/* harmony export */   useQRScanner: function() { return /* binding */ rn; },\n/* harmony export */   useQRScannerRaw: function() { return /* binding */ nn; },\n/* harmony export */   useSDK: function() { return /* binding */ Ds; },\n/* harmony export */   useSettingsButton: function() { return /* binding */ an; },\n/* harmony export */   useSettingsButtonRaw: function() { return /* binding */ on; },\n/* harmony export */   useSwipeBehavior: function() { return /* binding */ hn; },\n/* harmony export */   useSwipeBehaviorRaw: function() { return /* binding */ cn; },\n/* harmony export */   useThemeParams: function() { return /* binding */ un; },\n/* harmony export */   useThemeParamsRaw: function() { return /* binding */ pn; },\n/* harmony export */   useUtils: function() { return /* binding */ dn; },\n/* harmony export */   useUtilsRaw: function() { return /* binding */ ln; },\n/* harmony export */   useViewport: function() { return /* binding */ wn; },\n/* harmony export */   useViewportRaw: function() { return /* binding */ _n; },\n/* harmony export */   withBackButton: function() { return /* binding */ qn; },\n/* harmony export */   withBackButtonRaw: function() { return /* binding */ On; },\n/* harmony export */   withBiometryManager: function() { return /* binding */ Nn; },\n/* harmony export */   withBiometryManagerRaw: function() { return /* binding */ Vn; },\n/* harmony export */   withClosingBehavior: function() { return /* binding */ Bn; },\n/* harmony export */   withClosingBehaviorRaw: function() { return /* binding */ Dn; },\n/* harmony export */   withCloudStorage: function() { return /* binding */ Ln; },\n/* harmony export */   withCloudStorageRaw: function() { return /* binding */ Mn; },\n/* harmony export */   withHapticFeedback: function() { return /* binding */ Hn; },\n/* harmony export */   withHapticFeedbackRaw: function() { return /* binding */ $n; },\n/* harmony export */   withInitData: function() { return /* binding */ Wn; },\n/* harmony export */   withInitDataRaw: function() { return /* binding */ Un; },\n/* harmony export */   withInvoice: function() { return /* binding */ jn; },\n/* harmony export */   withInvoiceRaw: function() { return /* binding */ Gn; },\n/* harmony export */   withMainButton: function() { return /* binding */ Kn; },\n/* harmony export */   withMainButtonRaw: function() { return /* binding */ zn; },\n/* harmony export */   withMiniApp: function() { return /* binding */ Fn; },\n/* harmony export */   withMiniAppRaw: function() { return /* binding */ Jn; },\n/* harmony export */   withPopup: function() { return /* binding */ Yn; },\n/* harmony export */   withPopupRaw: function() { return /* binding */ Qn; },\n/* harmony export */   withQRScanner: function() { return /* binding */ Xn; },\n/* harmony export */   withQRScannerRaw: function() { return /* binding */ Zn; },\n/* harmony export */   withSettingsButton: function() { return /* binding */ er; },\n/* harmony export */   withSettingsButtonRaw: function() { return /* binding */ tr; },\n/* harmony export */   withSwipeBehavior: function() { return /* binding */ nr; },\n/* harmony export */   withSwipeBehaviorRaw: function() { return /* binding */ sr; },\n/* harmony export */   withThemeParams: function() { return /* binding */ ir; },\n/* harmony export */   withThemeParamsRaw: function() { return /* binding */ rr; },\n/* harmony export */   withTimeout: function() { return /* binding */ Nt; },\n/* harmony export */   withUtils: function() { return /* binding */ cr; },\n/* harmony export */   withUtilsRaw: function() { return /* binding */ ar; },\n/* harmony export */   withViewport: function() { return /* binding */ pr; },\n/* harmony export */   withViewportRaw: function() { return /* binding */ hr; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\nvar ae = Object.defineProperty, ce = (e, t, s) => t in e ? ae(e, t, { enumerable: !0, configurable: !0, writable: !0, value: s }) : e[t] = s, c = (e, t, s) => (ce(e, typeof t != \"symbol\" ? t + \"\" : t, s), s);\nfunction St(e, t) {\n  let s;\n  const n = () => {\n    s !== void 0 && t && t(s), s = void 0;\n  };\n  return [() => s === void 0 ? s = e(n) : s, n];\n}\nfunction Rt(e) {\n  const t = j(), { count: s } = t;\n  t.unsubscribe(e), s && !t.count && Ce();\n}\nfunction he(e) {\n  return j().subscribe(e), () => Rt(e);\n}\nclass pe {\n  constructor(t, s = {}) {\n    this.scope = t, this.options = s;\n  }\n  /**\n   * Prints message into a console in case, logger is currently enabled.\n   * @param level - log level.\n   * @param args - arguments.\n   */\n  print(t, ...s) {\n    const n = /* @__PURE__ */ new Date(), r = Intl.DateTimeFormat(\"en-GB\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      fractionalSecondDigits: 3,\n      timeZone: \"UTC\"\n    }).format(n), { textColor: i, bgColor: o } = this.options, a = \"font-weight: bold;padding: 0 5px;border-radius:5px\";\n    console[t](\n      `%c${r}%c / %c${this.scope}`,\n      `${a};background-color: lightblue;color:black`,\n      \"\",\n      `${a};${i ? `color:${i};` : \"\"}${o ? `background-color:${o}` : \"\"}`,\n      ...s\n    );\n  }\n  /**\n   * Prints error message into a console.\n   * @param args\n   */\n  error(...t) {\n    this.print(\"error\", ...t);\n  }\n  /**\n   * Prints log message into a console.\n   * @param args\n   */\n  log(...t) {\n    this.print(\"log\", ...t);\n  }\n}\nconst it = new pe(\"SDK\", {\n  bgColor: \"forestgreen\",\n  textColor: \"white\"\n});\nlet X = !1;\nconst mt = ({ name: e, payload: t }) => {\n  it.log(\"Event received:\", t ? { name: e, payload: t } : { name: e });\n};\nfunction ue(e) {\n  X !== e && (X = e, e ? he(mt) : Rt(mt));\n}\nfunction le(...e) {\n  X && it.log(...e);\n}\nclass D {\n  constructor() {\n    c(this, \"listeners\", /* @__PURE__ */ new Map()), c(this, \"listenersCount\", 0), c(this, \"subscribeListeners\", []);\n  }\n  /**\n   * Removes all event listeners.\n   */\n  clear() {\n    this.listeners.clear(), this.subscribeListeners = [];\n  }\n  /**\n   * Returns count of bound listeners.\n   */\n  get count() {\n    return this.listenersCount + this.subscribeListeners.length;\n  }\n  emit(t, ...s) {\n    this.subscribeListeners.forEach((n) => n({\n      event: t,\n      args: s\n    })), (this.listeners.get(t) || []).forEach(([n, r]) => {\n      n(...s), r && this.off(t, n);\n    });\n  }\n  /**\n   * Adds new event listener.\n   * @param event - event name.\n   * @param listener - event listener.\n   * @param once - should listener be called only once.\n   * @returns Function to remove bound event listener.\n   */\n  on(t, s, n) {\n    let r = this.listeners.get(t);\n    return r || this.listeners.set(t, r = []), r.push([s, n]), this.listenersCount += 1, () => this.off(t, s);\n  }\n  /**\n   * Removes event listener. In case, specified listener was bound several times, it removes\n   * only a single one.\n   * @param event - event name.\n   * @param listener - event listener.\n   */\n  off(t, s) {\n    const n = this.listeners.get(t) || [];\n    for (let r = 0; r < n.length; r += 1)\n      if (s === n[r][0]) {\n        n.splice(r, 1), this.listenersCount -= 1;\n        return;\n      }\n  }\n  /**\n   * Adds a new event listener for all events.\n   * @param listener - event listener.\n   * @returns Function to remove event listener.\n   */\n  subscribe(t) {\n    return this.subscribeListeners.push(t), () => this.unsubscribe(t);\n  }\n  /**\n   * Removes global event listener. In case, specified listener was bound several times, it removes\n   * only a single one.\n   * @param listener - event listener.\n   */\n  unsubscribe(t) {\n    for (let s = 0; s < this.subscribeListeners.length; s += 1)\n      if (this.subscribeListeners[s] === t) {\n        this.subscribeListeners.splice(s, 1);\n        return;\n      }\n  }\n}\nfunction tt(e, t, s) {\n  return window.addEventListener(e, t, s), () => window.removeEventListener(e, t, s);\n}\nfunction ot(...e) {\n  let t = !1;\n  const s = e.flat(1);\n  return [\n    (n) => !t && s.push(n),\n    () => {\n      t || (t = !0, s.forEach((n) => n()));\n    },\n    t\n  ];\n}\nclass W extends Error {\n  constructor(t, s, n) {\n    super(s, { cause: n }), this.type = t, Object.setPrototypeOf(this, W.prototype);\n  }\n}\nfunction b(e, t, s) {\n  return new W(e, t, s);\n}\nconst de = \"ERR_METHOD_UNSUPPORTED\", _e = \"ERR_METHOD_PARAMETER_UNSUPPORTED\", we = \"ERR_UNKNOWN_ENV\", ge = \"ERR_INVOKE_CUSTOM_METHOD_RESPONSE\", fe = \"ERR_TIMED_OUT\", be = \"ERR_UNEXPECTED_TYPE\", xt = \"ERR_PARSE\", me = \"ERR_NAVIGATION_LIST_EMPTY\", ve = \"ERR_NAVIGATION_CURSOR_INVALID\", bn = \"ERR_NAVIGATION_ITEM_INVALID\", mn = \"ERR_SSR_INIT\", ye = \"ERR_INVALID_PATH_BASE\";\nfunction T() {\n  return b(be, \"Value has unexpected type\");\n}\nclass G {\n  constructor(t, s, n) {\n    this.parser = t, this.isOptional = s, this.type = n;\n  }\n  /**\n   * Attempts to parse passed value\n   * @param value - value to parse.\n   * @throws {SDKError} ERR_PARSE\n   * @see ERR_PARSE\n   */\n  parse(t) {\n    if (!(this.isOptional && t === void 0))\n      try {\n        return this.parser(t);\n      } catch (s) {\n        throw b(\n          xt,\n          `Unable to parse value${this.type ? ` as ${this.type}` : \"\"}`,\n          s\n        );\n      }\n  }\n  optional() {\n    return this.isOptional = !0, this;\n  }\n}\nfunction A(e, t) {\n  return () => new G(e, !1, t);\n}\nconst E = A((e) => {\n  if (typeof e == \"boolean\")\n    return e;\n  const t = String(e);\n  if (t === \"1\" || t === \"true\")\n    return !0;\n  if (t === \"0\" || t === \"false\")\n    return !1;\n  throw T();\n}, \"boolean\");\nfunction Ct(e, t) {\n  const s = {};\n  for (const n in e) {\n    const r = e[n];\n    if (!r)\n      continue;\n    let i, o;\n    if (typeof r == \"function\" || \"parse\" in r)\n      i = n, o = typeof r == \"function\" ? r : r.parse.bind(r);\n    else {\n      const { type: a } = r;\n      i = r.from || n, o = typeof a == \"function\" ? a : a.parse.bind(a);\n    }\n    try {\n      const a = o(t(i));\n      a !== void 0 && (s[n] = a);\n    } catch (a) {\n      throw b(xt, `Unable to parse field \"${n}\"`, a);\n    }\n  }\n  return s;\n}\nfunction Tt(e) {\n  let t = e;\n  if (typeof t == \"string\" && (t = JSON.parse(t)), typeof t != \"object\" || t === null || Array.isArray(t))\n    throw T();\n  return t;\n}\nfunction v(e, t) {\n  return new G((s) => {\n    const n = Tt(s);\n    return Ct(e, (r) => n[r]);\n  }, !1, t);\n}\nconst R = A((e) => {\n  if (typeof e == \"number\")\n    return e;\n  if (typeof e == \"string\") {\n    const t = Number(e);\n    if (!Number.isNaN(t))\n      return t;\n  }\n  throw T();\n}, \"number\"), u = A((e) => {\n  if (typeof e == \"string\" || typeof e == \"number\")\n    return e.toString();\n  throw T();\n}, \"string\");\nfunction At(e) {\n  return v({\n    eventType: u(),\n    eventData: (t) => t\n  }).parse(e);\n}\nfunction Ee() {\n  [\"TelegramGameProxy_receiveEvent\", \"TelegramGameProxy\", \"Telegram\"].forEach((e) => {\n    delete window[e];\n  });\n}\nfunction et(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({ eventType: e, eventData: t }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nfunction Pe() {\n  [\n    [\"TelegramGameProxy_receiveEvent\"],\n    // Windows Phone.\n    [\"TelegramGameProxy\", \"receiveEvent\"],\n    // Desktop.\n    [\"Telegram\", \"WebView\", \"receiveEvent\"]\n    // Android and iOS.\n  ].forEach((e) => {\n    let t = window;\n    e.forEach((s, n, r) => {\n      if (n === r.length - 1) {\n        t[s] = et;\n        return;\n      }\n      s in t || (t[s] = {}), t = t[s];\n    });\n  });\n}\nconst Se = {\n  clipboard_text_received: v({\n    req_id: u(),\n    data: (e) => e === null ? e : u().optional().parse(e)\n  }),\n  custom_method_invoked: v({\n    req_id: u(),\n    result: (e) => e,\n    error: u().optional()\n  }),\n  popup_closed: {\n    parse(e) {\n      return v({\n        button_id: (t) => t == null ? void 0 : u().parse(t)\n      }).parse(e ?? {});\n    }\n  },\n  viewport_changed: v({\n    height: R(),\n    width: (e) => e == null ? window.innerWidth : R().parse(e),\n    is_state_stable: E(),\n    is_expanded: E()\n  })\n};\nfunction Re() {\n  const e = new D(), t = new D();\n  t.subscribe((n) => {\n    e.emit(\"event\", { name: n.event, payload: n.args[0] });\n  }), Pe();\n  const [, s] = ot(\n    // Don't forget to remove created handlers.\n    Ee,\n    // Add \"resize\" event listener to make sure, we always have fresh viewport information.\n    // Desktop version of Telegram is sometimes not sending the viewport_changed\n    // event. For example, when the MainButton is shown. That's why we should\n    // add our own listener to make sure, viewport information is always fresh.\n    // Issue: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/10\n    tt(\"resize\", () => {\n      t.emit(\"viewport_changed\", {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: !0,\n        is_expanded: !0\n      });\n    }),\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    tt(\"message\", (n) => {\n      if (n.source !== window.parent)\n        return;\n      let r;\n      try {\n        r = At(n.data);\n      } catch {\n        return;\n      }\n      const { eventType: i, eventData: o } = r, a = Se[i];\n      try {\n        const h = a ? a.parse(o) : o;\n        t.emit(...h ? [i, h] : [i]);\n      } catch (h) {\n        it.error(\n          `An error occurred processing the \"${i}\" event from the Telegram application.\nPlease, file an issue here:\nhttps://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose`,\n          r,\n          h\n        );\n      }\n    }),\n    // Clear emitters.\n    () => e.clear(),\n    () => t.clear()\n  );\n  return [{\n    on: t.on.bind(t),\n    off: t.off.bind(t),\n    subscribe(n) {\n      return e.on(\"event\", n);\n    },\n    unsubscribe(n) {\n      e.off(\"event\", n);\n    },\n    get count() {\n      return t.count + e.count;\n    }\n  }, s];\n}\nconst [xe, Ce] = St(\n  (e) => {\n    const [t, s] = Re(), n = t.off.bind(t);\n    return t.off = (r, i) => {\n      const { count: o } = t;\n      n(r, i), o && !t.count && e();\n    }, [t, s];\n  },\n  ([, e]) => e()\n);\nfunction j() {\n  return xe()[0];\n}\nfunction z(e, t) {\n  j().off(e, t);\n}\nfunction y(e, t, s) {\n  return j().on(e, t, s);\n}\nfunction $(e) {\n  return typeof e == \"object\" && e !== null && !Array.isArray(e);\n}\nfunction Te(e, t) {\n  const s = e.split(\".\"), n = t.split(\".\"), r = Math.max(s.length, n.length);\n  for (let i = 0; i < r; i += 1) {\n    const o = parseInt(s[i] || \"0\", 10), a = parseInt(n[i] || \"0\", 10);\n    if (o !== a)\n      return o > a ? 1 : -1;\n  }\n  return 0;\n}\nfunction f(e, t) {\n  return Te(e, t) <= 0;\n}\nfunction x(e, t, s) {\n  if (typeof s == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\")\n        return f(\"6.4\", s);\n      if (t === \"try_browser\")\n        return f(\"7.6\", s);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\")\n      return f(\"6.9\", s);\n    if (e === \"web_app_close\" && t === \"return_back\")\n      return f(\"7.6\", s);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return f(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return f(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return f(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return f(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return f(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return f(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return f(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return f(\"7.7\", t);\n    default:\n      return [\n        \"iframe_ready\",\n        \"iframe_will_reload\",\n        \"web_app_close\",\n        \"web_app_data_send\",\n        \"web_app_expand\",\n        \"web_app_open_link\",\n        \"web_app_ready\",\n        \"web_app_request_theme\",\n        \"web_app_request_viewport\",\n        \"web_app_setup_main_button\",\n        \"web_app_setup_closing_behavior\"\n      ].includes(e);\n  }\n}\nfunction kt(e) {\n  return \"external\" in e && $(e.external) && \"notify\" in e.external && typeof e.external.notify == \"function\";\n}\nfunction It(e) {\n  return \"TelegramWebviewProxy\" in e && $(e.TelegramWebviewProxy) && \"postEvent\" in e.TelegramWebviewProxy && typeof e.TelegramWebviewProxy.postEvent == \"function\";\n}\nfunction at() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nconst Ae = \"https://web.telegram.org\";\nlet Ot = Ae;\nfunction vn(e) {\n  Ot = e;\n}\nfunction ke() {\n  return Ot;\n}\nfunction B(e, t, s) {\n  let n = {}, r;\n  if (!t && !s ? n = {} : t && s ? (n = s, r = t) : t && (\"targetOrigin\" in t ? n = t : r = t), le(\"Posting event:\", r ? { event: e, data: r } : { event: e }), at())\n    return window.parent.postMessage(\n      JSON.stringify({ eventType: e, eventData: r }),\n      n.targetOrigin || ke()\n    );\n  if (kt(window)) {\n    window.external.notify(JSON.stringify({ eventType: e, eventData: r }));\n    return;\n  }\n  if (It(window)) {\n    window.TelegramWebviewProxy.postEvent(e, JSON.stringify(r));\n    return;\n  }\n  throw b(\n    we,\n    \"Unable to determine current environment and possible way to send event. You are probably trying to use Mini Apps method outside the Telegram application environment.\"\n  );\n}\nfunction Ie(e) {\n  return (t, s) => {\n    if (!x(t, e))\n      throw b(de, `Method \"${t}\" is unsupported in Mini Apps version ${e}`);\n    if ($(s) && t === \"web_app_set_header_color\" && \"color\" in s && !x(t, \"color\", e))\n      throw b(\n        _e,\n        `Parameter \"color\" of \"${t}\" method is unsupported in Mini Apps version ${e}`\n      );\n    return B(t, s);\n  };\n}\nfunction qt(e) {\n  return ({ req_id: t }) => t === e;\n}\nfunction Vt(e) {\n  return b(fe, `Timeout reached: ${e}ms`);\n}\nfunction Nt(e, t) {\n  return Promise.race([\n    typeof e == \"function\" ? e() : e,\n    new Promise((s, n) => {\n      setTimeout(() => {\n        n(Vt(t));\n      }, t);\n    })\n  ]);\n}\nasync function w(e) {\n  let t;\n  const s = new Promise((a) => t = a), { event: n, capture: r, timeout: i } = e, [, o] = ot(\n    // We need to iterate over all tracked events, and create their event listeners.\n    (Array.isArray(n) ? n : [n]).map((a) => y(a, (h) => {\n      (!r || (Array.isArray(n) ? r({\n        event: a,\n        payload: h\n      }) : r(h))) && t(h);\n    }))\n  );\n  try {\n    return (e.postEvent || B)(e.method, e.params), await (i ? Nt(s, i) : s);\n  } finally {\n    o();\n  }\n}\nasync function V(e, t, s, n = {}) {\n  const {\n    result: r,\n    error: i\n  } = await w({\n    ...n,\n    method: \"web_app_invoke_custom_method\",\n    event: \"custom_method_invoked\",\n    params: {\n      method: e,\n      params: t,\n      req_id: s\n    },\n    capture: qt(s)\n  });\n  if (i)\n    throw b(ge, i);\n  return r;\n}\nfunction st(...e) {\n  return e.map((t) => {\n    if (typeof t == \"string\")\n      return t;\n    if ($(t))\n      return st(Object.entries(t).map((s) => s[1] && s[0]));\n    if (Array.isArray(t))\n      return st(...t);\n  }).filter(Boolean).join(\" \");\n}\nfunction yn(...e) {\n  return e.reduce((t, s) => ($(s) && Object.entries(s).forEach(([n, r]) => {\n    const i = st(t[n], r);\n    i.length && (t[n] = i);\n  }), t), {});\n}\nfunction ct(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction Oe(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction Dt(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (ct(t))\n    return t;\n  if (Oe(t)) {\n    let n = \"#\";\n    for (let r = 0; r < 3; r += 1)\n      n += t[1 + r].repeat(2);\n    return n;\n  }\n  const s = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!s)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return s.slice(1).reduce((n, r) => {\n    const i = parseInt(r, 10).toString(16);\n    return n + (i.length === 1 ? \"0\" : \"\") + i;\n  }, \"#\");\n}\nfunction Bt(e) {\n  const t = Dt(e);\n  return Math.sqrt(\n    [0.299, 0.587, 0.114].reduce((s, n, r) => {\n      const i = parseInt(t.slice(1 + r * 2, 1 + (r + 1) * 2), 16);\n      return s + i * i * n;\n    }, 0)\n  ) < 120;\n}\nclass qe {\n  constructor(t) {\n    c(this, \"ee\", new D()), c(this, \"on\", this.ee.on.bind(this.ee)), c(this, \"off\", this.ee.off.bind(this.ee)), this.state = t;\n  }\n  /**\n   * Clones current state and returns its copy.\n   */\n  clone() {\n    return { ...this.state };\n  }\n  set(t, s) {\n    Object.entries(typeof t == \"string\" ? { [t]: s } : t).reduce((n, [r, i]) => this.state[r] === i || i === void 0 ? n : (this.state[r] = i, this.ee.emit(`change:${r}`, i), !0), !1) && this.ee.emit(\"change\", this.state);\n  }\n  /**\n   * Returns value by specified key.\n   * @param key - state key.\n   */\n  get(t) {\n    return this.state[t];\n  }\n}\nclass ht {\n  constructor(t) {\n    c(this, \"state\"), c(this, \"get\"), c(this, \"set\"), c(this, \"clone\"), this.state = new qe(t), this.set = this.state.set.bind(this.state), this.get = this.state.get.bind(this.state), this.clone = this.state.clone.bind(this.state);\n  }\n}\nfunction Mt(e, t) {\n  return (s) => x(t[s], e);\n}\nclass pt extends ht {\n  constructor(t, s, n) {\n    super(t), c(this, \"supports\"), this.supports = Mt(s, n);\n  }\n}\nclass Ve extends pt {\n  constructor(t, s, n) {\n    super({ isVisible: t }, s, {\n      show: \"web_app_setup_back_button\",\n      hide: \"web_app_setup_back_button\"\n    }), c(this, \"on\", (r, i) => r === \"click\" ? y(\"back_button_pressed\", i) : this.state.on(r, i)), c(this, \"off\", (r, i) => r === \"click\" ? z(\"back_button_pressed\", i) : this.state.off(r, i)), this.postEvent = n;\n  }\n  set isVisible(t) {\n    this.set(\"isVisible\", t), this.postEvent(\"web_app_setup_back_button\", { is_visible: t });\n  }\n  /**\n   * True if BackButton is currently visible.\n   */\n  get isVisible() {\n    return this.get(\"isVisible\");\n  }\n  /**\n   * Hides the BackButton.\n   */\n  hide() {\n    this.isVisible = !1;\n  }\n  /**\n   * Shows the BackButton.\n   */\n  show() {\n    this.isVisible = !0;\n  }\n}\nconst Lt = A((e) => e instanceof Date ? e : new Date(R().parse(e) * 1e3), \"Date\");\nfunction ut(e, t) {\n  return new G((s) => {\n    if (typeof s != \"string\" && !(s instanceof URLSearchParams))\n      throw T();\n    const n = typeof s == \"string\" ? new URLSearchParams(s) : s;\n    return Ct(e, (r) => {\n      const i = n.get(r);\n      return i === null ? void 0 : i;\n    });\n  }, !1, t);\n}\nconst Ne = v({\n  id: R(),\n  type: u(),\n  title: u(),\n  photoUrl: {\n    type: u().optional(),\n    from: \"photo_url\"\n  },\n  username: u().optional()\n}, \"Chat\").optional(), vt = v({\n  addedToAttachmentMenu: {\n    type: E().optional(),\n    from: \"added_to_attachment_menu\"\n  },\n  allowsWriteToPm: {\n    type: E().optional(),\n    from: \"allows_write_to_pm\"\n  },\n  firstName: {\n    type: u(),\n    from: \"first_name\"\n  },\n  id: R(),\n  isBot: {\n    type: E().optional(),\n    from: \"is_bot\"\n  },\n  isPremium: {\n    type: E().optional(),\n    from: \"is_premium\"\n  },\n  languageCode: {\n    type: u().optional(),\n    from: \"language_code\"\n  },\n  lastName: {\n    type: u().optional(),\n    from: \"last_name\"\n  },\n  photoUrl: {\n    type: u().optional(),\n    from: \"photo_url\"\n  },\n  username: u().optional()\n}, \"User\").optional();\nfunction $t() {\n  return ut({\n    authDate: {\n      type: Lt(),\n      from: \"auth_date\"\n    },\n    canSendAfter: {\n      type: R().optional(),\n      from: \"can_send_after\"\n    },\n    chat: Ne,\n    chatInstance: {\n      type: u().optional(),\n      from: \"chat_instance\"\n    },\n    chatType: {\n      type: u().optional(),\n      from: \"chat_type\"\n    },\n    hash: u(),\n    queryId: {\n      type: u().optional(),\n      from: \"query_id\"\n    },\n    receiver: vt,\n    startParam: {\n      type: u().optional(),\n      from: \"start_param\"\n    },\n    user: vt\n  }, \"InitData\");\n}\nconst De = A((e) => Dt(u().parse(e)), \"rgb\");\nfunction Be(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nfunction Me(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nconst Ht = A(\n  (e) => {\n    const t = De().optional();\n    return Object.entries(Tt(e)).reduce((s, [n, r]) => (s[Be(n)] = t.parse(r), s), {});\n  },\n  \"ThemeParams\"\n);\nfunction lt(e) {\n  return ut({\n    botInline: {\n      type: E().optional(),\n      from: \"tgWebAppBotInline\"\n    },\n    initData: {\n      type: $t().optional(),\n      from: \"tgWebAppData\"\n    },\n    initDataRaw: {\n      type: u().optional(),\n      from: \"tgWebAppData\"\n    },\n    platform: {\n      type: u(),\n      from: \"tgWebAppPlatform\"\n    },\n    showSettings: {\n      type: E().optional(),\n      from: \"tgWebAppShowSettings\"\n    },\n    startParam: {\n      type: u().optional(),\n      from: \"tgWebAppStartParam\"\n    },\n    themeParams: {\n      type: Ht(),\n      from: \"tgWebAppThemeParams\"\n    },\n    version: {\n      type: u(),\n      from: \"tgWebAppVersion\"\n    }\n  }).parse(e);\n}\nfunction Ut(e) {\n  return lt(\n    e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\")\n  );\n}\nfunction Le() {\n  return Ut(window.location.href);\n}\nfunction Wt() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction $e() {\n  const e = Wt();\n  if (!e)\n    throw new Error(\"Unable to get first navigation entry.\");\n  return Ut(e.name);\n}\nfunction Gt(e) {\n  return `telegram-apps/${e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`)}`;\n}\nfunction jt(e, t) {\n  sessionStorage.setItem(Gt(e), JSON.stringify(t));\n}\nfunction zt(e) {\n  const t = sessionStorage.getItem(Gt(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction He() {\n  return lt(zt(\"launchParams\") || \"\");\n}\nfunction Kt(e) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(e).map(([t, s]) => [Me(t), s])\n    )\n  );\n}\nfunction Ue(e) {\n  const {\n    initDataRaw: t,\n    themeParams: s,\n    platform: n,\n    version: r,\n    showSettings: i,\n    startParam: o,\n    botInline: a\n  } = e, h = new URLSearchParams();\n  return h.set(\"tgWebAppPlatform\", n), h.set(\"tgWebAppThemeParams\", Kt(s)), h.set(\"tgWebAppVersion\", r), t && h.set(\"tgWebAppData\", t), o && h.set(\"tgWebAppStartParam\", o), typeof i == \"boolean\" && h.set(\"tgWebAppShowSettings\", i ? \"1\" : \"0\"), typeof a == \"boolean\" && h.set(\"tgWebAppBotInline\", a ? \"1\" : \"0\"), h.toString();\n}\nfunction Jt(e) {\n  jt(\"launchParams\", Ue(e));\n}\nfunction nt() {\n  const e = [];\n  for (const t of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    Le,\n    // Then, try using the lower level API - window.performance.\n    $e,\n    // Finally, try to extract launch parameters from the session storage.\n    He\n  ])\n    try {\n      const s = t();\n      return Jt(s), s;\n    } catch (s) {\n      e.push(s instanceof Error ? s.message : JSON.stringify(s));\n    }\n  throw new Error([\n    `Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\n`,\n    \"📖 Refer to docs for more information:\",\n    `https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment\n`,\n    \"Collected errors:\",\n    e.map((t) => `— ${t}`)\n  ].join(`\n`));\n}\nfunction Ft() {\n  const e = Wt();\n  return !!(e && e.type === \"reload\");\n}\nfunction We() {\n  let e = 0;\n  return () => (e += 1).toString();\n}\nconst [Ge] = St(We);\nfunction l(e, t) {\n  return () => {\n    const s = nt(), n = {\n      ...s,\n      postEvent: Ie(s.version),\n      createRequestId: Ge()\n    };\n    if (typeof e == \"function\")\n      return e(n);\n    const [r, i, o] = ot(), a = t({\n      ...n,\n      // State should only be passed only in case, current page was reloaded. If we don't add\n      // this check, state restoration will work improperly in the web version of Telegram,\n      // when we are always working in the same \"session\" (tab).\n      state: Ft() ? zt(e) : void 0,\n      addCleanup: r\n    }), h = (p) => (o || r(\n      p.on(\"change\", (C) => {\n        jt(e, C);\n      })\n    ), p);\n    return [\n      a instanceof Promise ? a.then(h) : h(a),\n      i\n    ];\n  };\n}\nconst je = l(\"backButton\", ({\n  postEvent: e,\n  version: t,\n  state: s = { isVisible: !1 }\n}) => new Ve(s.isVisible, t, e));\nclass k extends pt {\n  constructor() {\n    super(...arguments), c(this, \"on\", this.state.on.bind(this.state)), c(this, \"off\", this.state.off.bind(this.state));\n  }\n}\nfunction Qt(e) {\n  const t = e.available ? e : {\n    available: !1,\n    device_id: \"\",\n    token_saved: !1,\n    access_requested: !1,\n    access_granted: !1,\n    type: \"\"\n  };\n  return {\n    available: !0,\n    type: t.type,\n    deviceId: t.device_id,\n    tokenSaved: t.token_saved,\n    accessRequested: t.access_requested,\n    accessGranted: t.access_granted\n  };\n}\nclass ze extends k {\n  constructor({ postEvent: t, version: s, ...n }) {\n    super(n, s, {\n      auth: \"web_app_biometry_request_auth\",\n      openSettings: \"web_app_biometry_open_settings\",\n      requestAccess: \"web_app_biometry_request_access\",\n      updateToken: \"web_app_biometry_update_token\"\n    }), c(this, \"postEvent\"), c(this, \"authPromise\"), c(this, \"accessPromise\"), this.postEvent = t;\n  }\n  /**\n   * Shows whether biometry is available.\n   */\n  get available() {\n    return this.get(\"available\");\n  }\n  /**\n   * Shows whether permission to use biometrics has been granted.\n   */\n  get accessGranted() {\n    return this.get(\"accessGranted\");\n  }\n  /**\n   * Shows whether if permission to use biometrics has been requested.\n   */\n  get accessRequested() {\n    return this.get(\"accessRequested\");\n  }\n  /**\n   * Authenticates the user using biometrics.\n   * @param options - method options.\n   * @since 7.2\n   * @returns Token from the local secure storage, if authentication was successful.\n   */\n  async authenticate({\n    reason: t,\n    ...s\n  }) {\n    return this.authPromise || (this.authPromise = w({\n      ...s,\n      method: \"web_app_biometry_request_auth\",\n      event: \"biometry_auth_requested\",\n      postEvent: this.postEvent,\n      params: {\n        // TODO: Check if reason is empty works fine.\n        reason: (t || \"\").trim()\n      }\n    }).then(({ token: n }) => n).finally(() => this.authPromise = void 0)), this.authPromise;\n  }\n  /**\n   * A unique device identifier that can be used to match the token to the device.\n   */\n  get deviceId() {\n    return this.get(\"deviceId\");\n  }\n  /**\n   * Opens the biometric access settings for bots. Useful when you need to request biometrics\n   * access to users who haven't granted it yet.\n   *\n   * _Note that this method can be called only in response to user interaction with the Mini App\n   * interface (e.g. a click inside the Mini App or on the main button)_.\n   * @since 7.2\n   */\n  openSettings() {\n    this.postEvent(\"web_app_biometry_open_settings\");\n  }\n  /**\n   * Requests permission to use biometrics.\n   * @since 7.2\n   * @returns Promise with true, if access was granted.\n   */\n  requestAccess({ reason: t, ...s } = {}) {\n    return this.accessPromise || (this.accessPromise = w({\n      ...s,\n      postEvent: this.postEvent,\n      method: \"web_app_biometry_request_access\",\n      event: \"biometry_info_received\",\n      params: { reason: t || \"\" }\n    }).then((n) => {\n      const r = Qt(n);\n      return this.set(r), r.accessGranted;\n    }).finally(() => this.accessPromise = void 0)), this.accessPromise;\n  }\n  /**\n   * The type of biometrics currently available on the device.\n   */\n  get biometryType() {\n    return this.get(\"biometryType\");\n  }\n  /**\n   * Shows whether token was saved previously in the local secure storage.\n   */\n  get tokenSaved() {\n    return this.get(\"tokenSaved\");\n  }\n  /**\n   * Updates the biometric token in a secure storage on the device.\n   * @returns Promise with `true`, if token was updated.\n   */\n  async updateToken({ token: t, ...s } = {}) {\n    return [\"removed\", \"updated\"].includes(\n      (await w({\n        ...s,\n        postEvent: this.postEvent,\n        method: \"web_app_biometry_update_token\",\n        event: \"biometry_token_updated\",\n        params: { token: t || \"\" }\n      })).status\n    );\n  }\n}\nasync function Ke(e) {\n  return Qt(\n    await w({\n      ...e || {},\n      method: \"web_app_biometry_get_info\",\n      event: \"biometry_info_received\"\n    })\n  );\n}\nconst Je = l(\n  \"biometryManager\",\n  async ({ postEvent: e, version: t, state: s }) => new ze({\n    ...s || x(\"web_app_biometry_get_info\", t) ? s || await Ke({ timeout: 1e3 }) : {\n      available: !1,\n      accessGranted: !1,\n      accessRequested: !1,\n      tokenSaved: !1,\n      deviceId: \"\"\n    },\n    version: t,\n    postEvent: e\n  })\n);\nclass dt extends ht {\n  constructor() {\n    super(...arguments), c(this, \"on\", this.state.on.bind(this.state)), c(this, \"off\", this.state.off.bind(this.state));\n  }\n}\nclass Fe extends dt {\n  constructor(t, s) {\n    super({ isConfirmationNeeded: t }), this.postEvent = s;\n  }\n  set isConfirmationNeeded(t) {\n    this.set(\"isConfirmationNeeded\", t), this.postEvent(\"web_app_setup_closing_behavior\", { need_confirmation: t });\n  }\n  /**\n   * True, if the confirmation dialog should be shown while the user is trying to close\n   * the Mini App.\n   */\n  get isConfirmationNeeded() {\n    return this.get(\"isConfirmationNeeded\");\n  }\n  /**\n   * Disables the confirmation dialog when closing the Mini App.\n   */\n  disableConfirmation() {\n    this.isConfirmationNeeded = !1;\n  }\n  /**\n   * Enables the confirmation dialog when closing the Mini App.\n   */\n  enableConfirmation() {\n    this.isConfirmationNeeded = !0;\n  }\n}\nconst Qe = l(\n  \"closingBehavior\",\n  ({\n    postEvent: e,\n    state: t = { isConfirmationNeeded: !1 }\n  }) => new Fe(t.isConfirmationNeeded, e)\n);\nclass _t {\n  constructor(t, s) {\n    c(this, \"supports\"), this.supports = Mt(t, s);\n  }\n}\nfunction Ye(e) {\n  if (Array.isArray(e))\n    return e;\n  if (typeof e == \"string\")\n    try {\n      const t = JSON.parse(e);\n      if (Array.isArray(t))\n        return t;\n    } catch {\n    }\n  throw T();\n}\nclass Ze extends G {\n  constructor(t, s, n) {\n    super(Ye, s, n), c(this, \"itemParser\"), this.itemParser = typeof t == \"function\" ? t : t.parse.bind(t);\n  }\n  /**\n   * Attempts to parse passed value\n   * @param value - value to parse.\n   * @throws {SDKError} ERR_PARSE\n   * @see ERR_PARSE\n   */\n  parse(t) {\n    const s = super.parse(t);\n    return s === void 0 ? s : s.map(this.itemParser);\n  }\n  of(t) {\n    return this.itemParser = typeof t == \"function\" ? t : t.parse.bind(t), this;\n  }\n}\nfunction Xe(e) {\n  return new Ze((t) => t, !1, e);\n}\nfunction yt(e, t) {\n  return Object.fromEntries(e.map((s) => [s, t]));\n}\nclass ts extends _t {\n  constructor(t, s, n) {\n    super(t, {\n      delete: \"web_app_invoke_custom_method\",\n      get: \"web_app_invoke_custom_method\",\n      getKeys: \"web_app_invoke_custom_method\",\n      set: \"web_app_invoke_custom_method\"\n    }), this.createRequestId = s, this.postEvent = n;\n  }\n  /**\n   * Deletes specified key or keys from the cloud storage.\n   * @param keyOrKeys - key or keys to delete.\n   * @param options - request execution options.\n   */\n  async delete(t, s = {}) {\n    const n = Array.isArray(t) ? t : [t];\n    n.length && await V(\n      \"deleteStorageValues\",\n      { keys: n },\n      this.createRequestId(),\n      { ...s, postEvent: this.postEvent }\n    );\n  }\n  /**\n   * Returns list of all keys presented in the cloud storage.\n   * @param options - request execution options.\n   */\n  async getKeys(t = {}) {\n    return Xe().of(u()).parse(\n      await V(\n        \"getStorageKeys\",\n        {},\n        this.createRequestId(),\n        { ...t, postEvent: this.postEvent }\n      )\n    );\n  }\n  async get(t, s = {}) {\n    const n = Array.isArray(t) ? t : [t];\n    if (!n.length)\n      return yt(n, \"\");\n    const r = await V(\n      \"getStorageValues\",\n      { keys: n },\n      this.createRequestId(),\n      { ...s, postEvent: this.postEvent }\n    ), i = v(yt(n, u()), \"CloudStorageData\").parse(r);\n    return Array.isArray(t) ? i : i[t];\n  }\n  /**\n   * Saves specified value by key.\n   * @param key - storage key.\n   * @param value - storage value.\n   * @param options - request execution options.\n   */\n  async set(t, s, n = {}) {\n    await V(\n      \"saveStorageValue\",\n      { key: t, value: s },\n      this.createRequestId(),\n      { ...n, postEvent: this.postEvent }\n    );\n  }\n}\nconst es = l(\n  ({ createRequestId: e, postEvent: t, version: s }) => new ts(s, e, t)\n);\nclass ss extends _t {\n  constructor(t, s) {\n    super(t, {\n      impactOccurred: \"web_app_trigger_haptic_feedback\",\n      notificationOccurred: \"web_app_trigger_haptic_feedback\",\n      selectionChanged: \"web_app_trigger_haptic_feedback\"\n    }), this.postEvent = s;\n  }\n  /**\n   * A method tells that an impact occurred. The Telegram app may play the\n   * appropriate haptics based on style value passed.\n   * @param style - impact style.\n   */\n  impactOccurred(t) {\n    this.postEvent(\"web_app_trigger_haptic_feedback\", {\n      type: \"impact\",\n      impact_style: t\n    });\n  }\n  /**\n   * A method tells that a task or action has succeeded, failed, or produced\n   * a warning. The Telegram app may play the appropriate haptics based on\n   * type value passed.\n   * @param type - notification type.\n   */\n  notificationOccurred(t) {\n    this.postEvent(\"web_app_trigger_haptic_feedback\", {\n      type: \"notification\",\n      notification_type: t\n    });\n  }\n  /**\n   * A method tells that the user has changed a selection. The Telegram app\n   * may play the appropriate haptics.\n   *\n   * Do not use this feedback when the user makes or confirms a selection;\n   * use it only when the selection changes.\n   */\n  selectionChanged() {\n    this.postEvent(\"web_app_trigger_haptic_feedback\", { type: \"selection_change\" });\n  }\n}\nconst ns = l(\n  ({ version: e, postEvent: t }) => new ss(e, t)\n);\nclass rs {\n  constructor(t) {\n    this.initData = t;\n  }\n  /**\n   * @see InitDataParsed.authDate\n   */\n  get authDate() {\n    return this.initData.authDate;\n  }\n  /**\n   * @see InitDataParsed.canSendAfter\n   */\n  get canSendAfter() {\n    return this.initData.canSendAfter;\n  }\n  /**\n   * Date after which it is allowed to call\n   * the [answerWebAppQuery](https://core.telegram.org/bots/api#answerwebappquery) method.\n   */\n  get canSendAfterDate() {\n    const { canSendAfter: t } = this;\n    return t ? new Date(this.authDate.getTime() + t * 1e3) : void 0;\n  }\n  /**\n   * @see InitDataParsed.chat\n   */\n  get chat() {\n    return this.initData.chat;\n  }\n  /**\n   * @see InitDataParsed.chatType\n   */\n  get chatType() {\n    return this.initData.chatType;\n  }\n  /**\n   * @see InitDataParsed.chatInstance\n   */\n  get chatInstance() {\n    return this.initData.chatInstance;\n  }\n  /**\n   * @see InitDataParsed.hash\n   */\n  get hash() {\n    return this.initData.hash;\n  }\n  /**\n   * @see InitDataParsed.queryId\n   */\n  get queryId() {\n    return this.initData.queryId;\n  }\n  /**\n   * @see InitDataParsed.receiver\n   */\n  get receiver() {\n    return this.initData.receiver;\n  }\n  /**\n   * @see InitDataParsed.startParam\n   */\n  get startParam() {\n    return this.initData.startParam;\n  }\n  /**\n   * @see InitDataParsed.user\n   */\n  get user() {\n    return this.initData.user;\n  }\n}\nconst is = l(\n  ({ initData: e }) => e ? new rs(e) : void 0\n);\nfunction En(e) {\n  return $t().parse(e);\n}\nclass os extends k {\n  constructor(t, s, n) {\n    super({ isOpened: t }, s, { open: \"web_app_open_invoice\" }), this.postEvent = n;\n  }\n  set isOpened(t) {\n    this.set(\"isOpened\", t);\n  }\n  /**\n   * True if invoice is currently opened.\n   */\n  get isOpened() {\n    return this.get(\"isOpened\");\n  }\n  async open(t, s) {\n    if (this.isOpened)\n      throw new Error(\"Invoice is already opened\");\n    let n;\n    if (!s)\n      n = t;\n    else {\n      const { hostname: r, pathname: i } = new URL(t, window.location.href);\n      if (r !== \"t.me\")\n        throw new Error(`Incorrect hostname: ${r}`);\n      const o = i.match(/^\\/(\\$|invoice\\/)([A-Za-z0-9\\-_=]+)$/);\n      if (!o)\n        throw new Error('Link pathname has incorrect format. Expected to receive \"/invoice/{slug}\" or \"/${slug}\"');\n      [, , n] = o;\n    }\n    this.isOpened = !0;\n    try {\n      return (await w({\n        method: \"web_app_open_invoice\",\n        event: \"invoice_closed\",\n        params: { slug: n },\n        postEvent: this.postEvent,\n        capture(r) {\n          return n === r.slug;\n        }\n      })).status;\n    } finally {\n      this.isOpened = !1;\n    }\n  }\n}\nconst as = l(\n  ({ version: e, postEvent: t }) => new os(!1, e, t)\n);\nclass cs extends ht {\n  constructor({ postEvent: t, ...s }) {\n    super(s), c(this, \"postEvent\"), c(this, \"on\", (n, r) => n === \"click\" ? y(\"main_button_pressed\", r) : this.state.on(n, r)), c(this, \"off\", (n, r) => n === \"click\" ? z(\"main_button_pressed\", r) : this.state.off(n, r)), this.postEvent = t;\n  }\n  /**\n   * The MainButton background color.\n   */\n  get bgColor() {\n    return this.get(\"bgColor\");\n  }\n  /**\n   * Sends current local state to the Telegram application.\n   */\n  commit() {\n    this.text !== \"\" && this.postEvent(\"web_app_setup_main_button\", {\n      is_visible: this.isVisible,\n      is_active: this.isEnabled,\n      is_progress_visible: this.isLoaderVisible,\n      text: this.text,\n      color: this.bgColor,\n      text_color: this.textColor\n    });\n  }\n  /**\n   * Disables the MainButton.\n   * @see Does not work on Android: https://github.com/Telegram-Mini-Apps/issues/issues/1\n   */\n  disable() {\n    return this.isEnabled = !1, this;\n  }\n  /**\n   * Enables the MainButton.\n   */\n  enable() {\n    return this.isEnabled = !0, this;\n  }\n  /**\n   * Hides the MainButton.\n   */\n  hide() {\n    return this.isVisible = !1, this;\n  }\n  /**\n   * Hides the MainButton loading indicator.\n   */\n  hideLoader() {\n    return this.isLoaderVisible = !1, this;\n  }\n  set isEnabled(t) {\n    this.setParams({ isEnabled: t });\n  }\n  /**\n   * True if the MainButton is enabled.\n   */\n  get isEnabled() {\n    return this.get(\"isEnabled\");\n  }\n  set isLoaderVisible(t) {\n    this.setParams({ isLoaderVisible: t });\n  }\n  /**\n   * True if the MainButton loader is visible.\n   */\n  get isLoaderVisible() {\n    return this.get(\"isLoaderVisible\");\n  }\n  set isVisible(t) {\n    this.setParams({ isVisible: t });\n  }\n  /**\n   * True if the MainButton is visible.\n   */\n  get isVisible() {\n    return this.get(\"isVisible\");\n  }\n  /**\n   * Shows the MainButton.\n   *\n   * Note that opening the Mini App from the attachment menu hides the main button until the\n   * user interacts with the Mini App interface.\n   */\n  show() {\n    return this.isVisible = !0, this;\n  }\n  /**\n   * Shows a loading indicator on the Main Button.\n   */\n  showLoader() {\n    return this.isLoaderVisible = !0, this;\n  }\n  /**\n   * Sets a new MainButton text. Minimal length for the text is 1 symbol, and maximum is 64 symbols.\n   * @param text - a new text.\n   */\n  setText(t) {\n    return this.setParams({ text: t });\n  }\n  /**\n   * Sets a new Main Button text color.\n   * @param textColor - new text color.\n   */\n  setTextColor(t) {\n    return this.setParams({ textColor: t });\n  }\n  /**\n   * Updates current Main Button color.\n   * @param bgColor - color to set.\n   */\n  setBgColor(t) {\n    return this.setParams({ bgColor: t });\n  }\n  /**\n   * Allows setting multiple Main Button parameters.\n   * @param params - Main Button parameters.\n   */\n  setParams(t) {\n    return this.set(t), this.commit(), this;\n  }\n  /**\n   * The MainButton text.\n   */\n  get text() {\n    return this.get(\"text\");\n  }\n  /**\n   * The MainButton text color.\n   */\n  get textColor() {\n    return this.get(\"textColor\");\n  }\n}\nconst hs = l(\n  \"mainButton\",\n  ({\n    postEvent: e,\n    themeParams: t,\n    state: s = {\n      isVisible: !1,\n      isEnabled: !1,\n      text: \"\",\n      isLoaderVisible: !1,\n      textColor: t.buttonTextColor || \"#ffffff\",\n      bgColor: t.buttonColor || \"#000000\"\n    }\n  }) => new cs({ ...s, postEvent: e })\n);\nfunction ps() {\n  return ut({\n    contact: v({\n      userId: {\n        type: R(),\n        from: \"user_id\"\n      },\n      phoneNumber: {\n        type: u(),\n        from: \"phone_number\"\n      },\n      firstName: {\n        type: u(),\n        from: \"first_name\"\n      },\n      lastName: {\n        type: u().optional(),\n        from: \"last_name\"\n      }\n    }),\n    authDate: {\n      type: Lt(),\n      from: \"auth_date\"\n    },\n    hash: u()\n  }, \"RequestedContact\");\n}\nfunction Yt(e, t) {\n  return (s) => {\n    const [n, r] = t[s];\n    return x(n, r, e);\n  };\n}\nfunction us(e) {\n  return new Promise((t) => {\n    setTimeout(t, e);\n  });\n}\nclass ls extends k {\n  constructor({ postEvent: t, createRequestId: s, version: n, botInline: r, ...i }) {\n    super(i, n, {\n      requestPhoneAccess: \"web_app_request_phone\",\n      requestWriteAccess: \"web_app_request_write_access\",\n      switchInlineQuery: \"web_app_switch_inline_query\",\n      setHeaderColor: \"web_app_set_header_color\",\n      setBackgroundColor: \"web_app_set_background_color\"\n    }), c(this, \"botInline\"), c(this, \"postEvent\"), c(this, \"createRequestId\"), c(this, \"requestPhoneAccessPromise\"), c(this, \"requestWriteAccessPromise\"), c(this, \"supportsParam\"), this.createRequestId = s, this.postEvent = t, this.botInline = r;\n    const o = this.supports.bind(this);\n    this.supports = (a) => o(a) ? a !== \"switchInlineQuery\" || r : !1, this.supportsParam = Yt(n, {\n      \"setHeaderColor.color\": [\"web_app_set_header_color\", \"color\"],\n      \"close.returnBack\": [\"web_app_close\", \"return_back\"]\n    });\n  }\n  /**\n   * Attempts to get requested contact.\n   * @param timeout - request timeout.\n   */\n  async getRequestedContact({\n    timeout: t = 1e4\n  } = {}) {\n    return ps().parse(\n      await V(\n        \"getRequestedContact\",\n        {},\n        this.createRequestId(),\n        { postEvent: this.postEvent, timeout: t }\n      )\n    );\n  }\n  /**\n   * The Mini App background color.\n   * @example \"#ffaabb\"\n   */\n  get bgColor() {\n    return this.get(\"bgColor\");\n  }\n  /**\n   * Closes the Mini App.\n   * @param returnBack - should the application be wrapped into the bottom bar.\n   */\n  close(t) {\n    this.postEvent(\"web_app_close\", this.supportsParam(\"close.returnBack\") ? { return_back: t } : {});\n  }\n  /**\n   * The Mini App header color.\n   * @example \"#ffaabb\"\n   * @example \"bg_color\"\n   */\n  get headerColor() {\n    return this.get(\"headerColor\");\n  }\n  /**\n   * True if the Mini App is currently launched in bot inline mode.\n   */\n  get isBotInline() {\n    return this.botInline;\n  }\n  /**\n   * True if the current Mini App background color is recognized as dark.\n   */\n  get isDark() {\n    return Bt(this.bgColor);\n  }\n  /**\n   * Informs the Telegram app that the Mini App is ready to be displayed.\n   *\n   * It is recommended to call this method as early as possible, as soon as all essential\n   * interface elements loaded. Once this method called, the loading placeholder is hidden\n   * and the Mini App shown.\n   *\n   * If the method not called, the placeholder will be hidden only when the page fully loaded.\n   */\n  ready() {\n    this.postEvent(\"web_app_ready\");\n  }\n  /**\n   * Requests current user contact information. In contrary to requestPhoneAccess, this method\n   * returns promise with contact information that rejects in case, user denied access, or request\n   * failed.\n   * @param options - additional options.\n   */\n  async requestContact({ timeout: t = 5e3 } = {}) {\n    try {\n      return await this.getRequestedContact();\n    } catch {\n    }\n    if (await this.requestPhoneAccess() !== \"sent\")\n      throw new Error(\"Access denied.\");\n    const s = Date.now() + t;\n    let n = 50;\n    return Nt(async () => {\n      for (; Date.now() < s; ) {\n        try {\n          return await this.getRequestedContact();\n        } catch {\n        }\n        await us(n), n += 50;\n      }\n      throw Vt(t);\n    }, t);\n  }\n  /**\n   * Requests current user phone access. Method returns promise, which resolves\n   * status of the request. In case, user accepted the request, Mini App bot will receive\n   * the according notification.\n   *\n   * To obtain the retrieved information instead, utilize the `requestContact` method.\n   * @param options - additional options.\n   * @see requestContact\n   */\n  async requestPhoneAccess(t = {}) {\n    return this.requestPhoneAccessPromise || (this.requestPhoneAccessPromise = w({\n      ...t,\n      method: \"web_app_request_phone\",\n      event: \"phone_requested\",\n      postEvent: this.postEvent\n    }).then(({ status: s }) => s).finally(() => this.requestPhoneAccessPromise = void 0)), this.requestPhoneAccessPromise;\n  }\n  /**\n   * Requests write message access to current user.\n   * @param options - additional options.\n   */\n  async requestWriteAccess(t = {}) {\n    return this.requestWriteAccessPromise || (this.requestWriteAccessPromise = w({\n      ...t,\n      method: \"web_app_request_write_access\",\n      event: \"write_access_requested\",\n      postEvent: this.postEvent\n    }).then(({ status: s }) => s).finally(() => this.requestWriteAccessPromise = void 0)), this.requestWriteAccessPromise;\n  }\n  /**\n   * A method used to send data to the bot. When this method called, a service message sent to\n   * the bot containing the data of the length up to 4096 bytes, and the Mini App closed. See the\n   * field `web_app_data` in the class [Message](https://core.telegram.org/bots/api#message).\n   *\n   * This method is only available for Mini Apps launched via a Keyboard button.\n   * @param data - data to send to bot.\n   * @throws {Error} data has incorrect size.\n   */\n  sendData(t) {\n    const { size: s } = new Blob([t]);\n    if (!s || s > 4096)\n      throw new Error(`Passed data has incorrect size: ${s}`);\n    this.postEvent(\"web_app_data_send\", { data: t });\n  }\n  /**\n   * Updates current Mini App header color.\n   *\n   * @see No effect on desktop: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/9\n   * @see Works incorrectly in Android: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/8\n   * @param color - color key or RGB color.\n   */\n  setHeaderColor(t) {\n    this.postEvent(\"web_app_set_header_color\", ct(t) ? { color: t } : { color_key: t }), this.set(\"headerColor\", t);\n  }\n  /**\n   * Updates current Mini App background color.\n   *\n   * @see No effect on desktop: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/9\n   * @see Works incorrectly in Android: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/8\n   * @param color - RGB color.\n   */\n  setBgColor(t) {\n    this.postEvent(\"web_app_set_background_color\", { color: t }), this.set(\"bgColor\", t);\n  }\n  /**\n   * Inserts the bot's username and the specified inline query in the current chat's input field.\n   * Query may be empty, in which case only the bot's username will be inserted. The client prompts\n   * the user to choose a specific chat, then opens that chat and inserts the bot's username and\n   * the specified inline query in the input field.\n   * @param text - text which should be inserted in the input after the current bot name. Max\n   * length is 256 symbols.\n   * @param chatTypes - List of chat types which could be chosen to send the message. Could be\n   * empty list.\n   */\n  switchInlineQuery(t, s = []) {\n    if (!this.supports(\"switchInlineQuery\") && !this.isBotInline)\n      throw new Error(\"Method is unsupported because Mini App should be launched in inline mode.\");\n    this.postEvent(\"web_app_switch_inline_query\", { query: t, chat_types: s });\n  }\n}\nconst ds = l(\n  \"miniApp\",\n  ({\n    themeParams: e,\n    botInline: t = !1,\n    state: s = {\n      bgColor: e.bgColor || \"#ffffff\",\n      headerColor: e.headerBgColor || \"#000000\"\n    },\n    ...n\n  }) => new ls({ ...n, ...s, botInline: t })\n);\nfunction _s(e) {\n  const t = e.message.trim(), s = (e.title || \"\").trim(), n = e.buttons || [];\n  let r;\n  if (s.length > 64)\n    throw new Error(`Title has incorrect size: ${s.length}`);\n  if (!t.length || t.length > 256)\n    throw new Error(`Message has incorrect size: ${t.length}`);\n  if (n.length > 3)\n    throw new Error(`Buttons have incorrect size: ${n.length}`);\n  return n.length ? r = n.map((i) => {\n    const { id: o = \"\" } = i;\n    if (o.length > 64)\n      throw new Error(`Button ID has incorrect size: ${o}`);\n    if (!i.type || i.type === \"default\" || i.type === \"destructive\") {\n      const a = i.text.trim();\n      if (!a.length || a.length > 64) {\n        const h = i.type || \"default\";\n        throw new Error(`Button text with type \"${h}\" has incorrect size: ${i.text.length}`);\n      }\n      return { ...i, text: a, id: o };\n    }\n    return { ...i, id: o };\n  }) : r = [{ type: \"close\", id: \"\" }], { title: s, message: t, buttons: r };\n}\nclass ws extends k {\n  constructor(t, s, n) {\n    super({ isOpened: t }, s, { open: \"web_app_open_popup\" }), this.postEvent = n;\n  }\n  set isOpened(t) {\n    this.set(\"isOpened\", t);\n  }\n  /**\n   * True if the Popup is opened.\n   */\n  get isOpened() {\n    return this.get(\"isOpened\");\n  }\n  /**\n   * A method that shows a native popup described by the `params` argument.\n   * Promise will be resolved when popup is closed. Resolved value will have\n   * an identifier of pressed button.\n   *\n   * In case, user clicked outside the popup or clicked top right popup close\n   * button, null will be returned.\n   *\n   * @param options - popup parameters.\n   * @throws {Error} Popup is already opened.\n   */\n  async open(t) {\n    if (this.isOpened)\n      throw new Error(\"Popup is already opened.\");\n    this.isOpened = !0;\n    try {\n      const { button_id: s = null } = await w({\n        event: \"popup_closed\",\n        method: \"web_app_open_popup\",\n        postEvent: this.postEvent,\n        params: _s(t)\n      });\n      return s;\n    } finally {\n      this.isOpened = !1;\n    }\n  }\n}\nconst gs = l(\n  ({ postEvent: e, version: t }) => new ws(!1, t, e)\n);\nclass fs extends k {\n  constructor(t, s, n) {\n    super({ isOpened: t }, s, {\n      close: \"web_app_close_scan_qr_popup\",\n      open: \"web_app_open_scan_qr_popup\"\n    }), this.postEvent = n;\n  }\n  /**\n   * Closes the scanner.\n   */\n  close() {\n    this.postEvent(\"web_app_close_scan_qr_popup\"), this.isOpened = !1;\n  }\n  set isOpened(t) {\n    this.set(\"isOpened\", t);\n  }\n  /**\n   * Returns true if the scanner is currently opened.\n   */\n  get isOpened() {\n    return this.get(\"isOpened\");\n  }\n  async open(t) {\n    if (this.isOpened)\n      throw new Error(\"The scanner is already opened\");\n    const { text: s, capture: n } = (typeof t == \"string\" ? { text: t } : t) || {};\n    this.isOpened = !0;\n    try {\n      const r = (await w({\n        method: \"web_app_open_scan_qr_popup\",\n        event: [\"qr_text_received\", \"scan_qr_popup_closed\"],\n        postEvent: this.postEvent,\n        params: { text: s },\n        capture(i) {\n          return i.event === \"scan_qr_popup_closed\" || !n || n(i.payload);\n        }\n      }) || {}).data || null;\n      return r && this.close(), r;\n    } finally {\n      this.isOpened = !1;\n    }\n  }\n  // TODO: Streaming mode, allowing to scan several QRs until closed.\n}\nconst bs = l(\n  ({ version: e, postEvent: t }) => new fs(!1, e, t)\n);\nclass ms extends pt {\n  constructor(t, s, n) {\n    super({ isVisible: t }, s, {\n      show: \"web_app_setup_settings_button\",\n      hide: \"web_app_setup_settings_button\"\n    }), c(this, \"on\", (r, i) => r === \"click\" ? y(\"settings_button_pressed\", i) : this.state.on(r, i)), c(this, \"off\", (r, i) => r === \"click\" ? z(\"settings_button_pressed\", i) : this.state.off(r, i)), this.postEvent = n;\n  }\n  set isVisible(t) {\n    this.set(\"isVisible\", t), this.postEvent(\"web_app_setup_settings_button\", { is_visible: t });\n  }\n  /**\n   * True if the SettingsButton is visible.\n   */\n  get isVisible() {\n    return this.get(\"isVisible\");\n  }\n  /**\n   * Hides the SettingsButton.\n   */\n  hide() {\n    this.isVisible = !1;\n  }\n  /**\n   * Shows the SettingsButton.\n   */\n  show() {\n    this.isVisible = !0;\n  }\n}\nconst vs = l(\n  \"settingsButton\",\n  ({\n    version: e,\n    postEvent: t,\n    state: s = { isVisible: !1 }\n  }) => new ms(s.isVisible, e, t)\n);\nclass ys extends k {\n  constructor(t, s, n) {\n    super({ isVerticalSwipeEnabled: t }, s, {\n      disableVerticalSwipe: \"web_app_setup_swipe_behavior\",\n      enableVerticalSwipe: \"web_app_setup_swipe_behavior\"\n    }), this.postEvent = n;\n  }\n  set isVerticalSwipeEnabled(t) {\n    this.set(\"isVerticalSwipeEnabled\", t), this.postEvent(\"web_app_setup_swipe_behavior\", { allow_vertical_swipe: t });\n  }\n  /**\n   * True, if the vertical swipe enabled.\n   */\n  get isVerticalSwipeEnabled() {\n    return this.get(\"isVerticalSwipeEnabled\");\n  }\n  /**\n   * Disables the vertical swipe.\n   */\n  disableVerticalSwipe() {\n    this.isVerticalSwipeEnabled = !1;\n  }\n  /**\n   * Enables the vertical swipe.\n   */\n  enableVerticalSwipe() {\n    this.isVerticalSwipeEnabled = !0;\n  }\n}\nconst Es = l(\n  \"swipeBehavior\",\n  ({\n    postEvent: e,\n    state: t = { isVerticalSwipeEnabled: !0 },\n    version: s\n  }) => new ys(t.isVerticalSwipeEnabled, s, e)\n);\nfunction Zt(e) {\n  return Ht().parse(e);\n}\nclass Ps extends dt {\n  /**\n   * @since v6.10\n   */\n  get accentTextColor() {\n    return this.get(\"accentTextColor\");\n  }\n  get bgColor() {\n    return this.get(\"bgColor\");\n  }\n  get buttonColor() {\n    return this.get(\"buttonColor\");\n  }\n  get buttonTextColor() {\n    return this.get(\"buttonTextColor\");\n  }\n  get destructiveTextColor() {\n    return this.get(\"destructiveTextColor\");\n  }\n  /**\n   * Returns the copy of the internal state of the current component instance.\n   */\n  getState() {\n    return this.clone();\n  }\n  /**\n   * @since v6.10\n   */\n  get headerBgColor() {\n    return this.get(\"headerBgColor\");\n  }\n  get hintColor() {\n    return this.get(\"hintColor\");\n  }\n  /**\n   * @returns True in case, current color scheme is recognized as dark. This\n   * value is calculated according to theme bg color.\n   */\n  get isDark() {\n    return !this.bgColor || Bt(this.bgColor);\n  }\n  get linkColor() {\n    return this.get(\"linkColor\");\n  }\n  get secondaryBgColor() {\n    return this.get(\"secondaryBgColor\");\n  }\n  /**\n   * @since v6.10\n   */\n  get sectionBgColor() {\n    return this.get(\"sectionBgColor\");\n  }\n  /**\n   * @since v6.10\n   */\n  get sectionHeaderTextColor() {\n    return this.get(\"sectionHeaderTextColor\");\n  }\n  /**\n   * @since v7.6\n   */\n  get sectionSeparatorColor() {\n    return this.get(\"sectionHeaderTextColor\");\n  }\n  /**\n   * Starts listening to the external theme changes and applies them.\n   * @returns Function to stop listening.\n   */\n  listen() {\n    return y(\"theme_changed\", (t) => {\n      this.set(Zt(t.theme_params));\n    });\n  }\n  /**\n   * @since v6.10\n   */\n  get subtitleTextColor() {\n    return this.get(\"subtitleTextColor\");\n  }\n  get textColor() {\n    return this.get(\"textColor\");\n  }\n}\nconst Ss = l(\n  \"themeParams\",\n  ({ themeParams: e, state: t = e, addCleanup: s }) => {\n    const n = new Ps(t);\n    return s(n.listen()), n;\n  }\n);\nfunction Pn(e = {}) {\n  return w({\n    ...e,\n    method: \"web_app_request_theme\",\n    event: \"theme_changed\"\n  }).then(Zt);\n}\nfunction M(e, t) {\n  return e.startsWith(t) ? e : `${t}${e}`;\n}\nfunction L(e) {\n  return new URL(\n    typeof e == \"string\" ? e : `${e.pathname || \"\"}${M(e.search || \"\", \"?\")}${M(e.hash || \"\", \"#\")}`,\n    \"http://a\"\n  );\n}\nclass Rs extends _t {\n  constructor(t, s, n) {\n    super(t, { readTextFromClipboard: \"web_app_read_text_from_clipboard\" }), c(this, \"supportsParam\"), this.version = t, this.createRequestId = s, this.postEvent = n, this.supportsParam = Yt(t, {\n      \"openLink.tryInstantView\": [\"web_app_open_link\", \"try_instant_view\"]\n    });\n  }\n  openLink(t, s) {\n    const n = L(t).toString();\n    if (!x(\"web_app_open_link\", this.version)) {\n      window.open(n, \"_blank\");\n      return;\n    }\n    const r = typeof s == \"boolean\" ? { tryInstantView: s } : s || {};\n    this.postEvent(\"web_app_open_link\", {\n      url: n,\n      try_browser: r.tryBrowser,\n      try_instant_view: r.tryInstantView\n    });\n  }\n  /**\n   * Opens a Telegram link inside Telegram app. The Mini App will be closed. It expects passing\n   * link in full format, with hostname \"t.me\".\n   * @param url - URL to be opened.\n   * @throws {Error} URL has not allowed hostname.\n   */\n  openTelegramLink(t) {\n    const { hostname: s, pathname: n, search: r } = new URL(t, \"https://t.me\");\n    if (s !== \"t.me\")\n      throw new Error(`URL has not allowed hostname: ${s}. Only \"t.me\" is allowed`);\n    if (!x(\"web_app_open_tg_link\", this.version)) {\n      window.location.href = t;\n      return;\n    }\n    this.postEvent(\"web_app_open_tg_link\", { path_full: n + r });\n  }\n  /**\n   * Reads text from clipboard and returns string or null. null is returned\n   * in cases:\n   * - Value in clipboard is not text\n   * - Access to clipboard is not allowed\n   */\n  async readTextFromClipboard() {\n    const t = this.createRequestId(), {\n      data: s = null\n    } = await w({\n      method: \"web_app_read_text_from_clipboard\",\n      event: \"clipboard_text_received\",\n      postEvent: this.postEvent,\n      params: { req_id: t },\n      capture: qt(t)\n    });\n    return s;\n  }\n  /**\n   * Shares specified URL with the passed to the chats, selected by user. After being called,\n   * it closes the mini application.\n   *\n   * This method uses Telegram's Share Links.\n   * @param url - URL to share.\n   * @param text - text to append after the URL.\n   * @see https://core.telegram.org/api/links#share-links\n   * @see https://core.telegram.org/widgets/share#custom-buttons\n   */\n  shareURL(t, s) {\n    this.openTelegramLink(\n      \"https://t.me/share/url?\" + new URLSearchParams({ url: t, text: s || \"\" }).toString().replace(/\\+/g, \"%20\")\n    );\n  }\n}\nconst xs = l(\n  ({ version: e, postEvent: t, createRequestId: s }) => new Rs(e, s, t)\n);\nasync function Xt(e = {}) {\n  const {\n    is_expanded: t,\n    is_state_stable: s,\n    ...n\n  } = await w({\n    ...e,\n    method: \"web_app_request_viewport\",\n    event: \"viewport_changed\"\n  });\n  return { ...n, isExpanded: t, isStateStable: s };\n}\nfunction q(e) {\n  return e < 0 ? 0 : e;\n}\nclass Cs extends dt {\n  constructor({ postEvent: t, stableHeight: s, height: n, width: r, isExpanded: i }) {\n    super({\n      height: q(n),\n      isExpanded: i,\n      stableHeight: q(s),\n      width: q(r)\n    }), c(this, \"postEvent\"), this.postEvent = t;\n  }\n  /**\n   * Requests viewport information from the Telegram application and updates current Viewport\n   * instance.\n   * @param options - options to request fresh data.\n   */\n  async sync(t) {\n    const { isStateStable: s, ...n } = await Xt(t);\n    this.set({\n      ...n,\n      stableHeight: s ? n.height : this.get(\"stableHeight\")\n    });\n  }\n  /**\n   * The current height of the **visible area** of the Mini App.\n   *\n   * The application can display just the top part of the Mini App, with its lower part remaining\n   * outside the screen area. From this position, the user can \"pull\" the Mini App to its\n   * maximum height, while the bot can do the same by calling `expand` method. As the position of\n   * the Mini App changes, the current height value of the visible area will be updated  in real\n   * time.\n   *\n   * Please note that the refresh rate of this value is not sufficient to smoothly follow the\n   * lower border of the window. It should not be used to pin interface elements to the bottom\n   * of the visible area. It's more appropriate to use the value of the `stableHeight`\n   * field for this purpose.\n   *\n   * @see stableHeight\n   */\n  get height() {\n    return this.get(\"height\");\n  }\n  /**\n   * The height of the visible area of the Mini App in its last stable state.\n   *\n   * The application can display just the top part of the Mini App, with its lower part remaining\n   * outside the screen area. From this position, the user can \"pull\" the Mini App to its\n   * maximum height, while the application can do the same by calling `expand` method.\n   *\n   * Unlike the value of `height`, the value of `stableHeight` does not change as the position\n   * of the Mini App changes with user gestures or during animations. The value of `stableHeight`\n   * will be updated after all gestures and animations are completed and\n   * the Mini App reaches its final size.\n   *\n   * @see height\n   */\n  get stableHeight() {\n    return this.get(\"stableHeight\");\n  }\n  /**\n   * Starts listening to viewport changes and applies them.\n   * @returns Function to stop listening.\n   */\n  listen() {\n    return y(\"viewport_changed\", (t) => {\n      const {\n        height: s,\n        width: n,\n        is_expanded: r,\n        is_state_stable: i\n      } = t, o = q(s);\n      this.set({\n        height: o,\n        isExpanded: r,\n        width: q(n),\n        ...i ? { stableHeight: o } : {}\n      });\n    });\n  }\n  /**\n   * True if the Mini App is expanded to the maximum available height. Otherwise, if\n   * the Mini App occupies part of the screen and can be expanded to the full height using\n   * `expand` method.\n   * @see expand\n   */\n  get isExpanded() {\n    return this.get(\"isExpanded\");\n  }\n  /**\n   * Current visible area width.\n   */\n  get width() {\n    return this.get(\"width\");\n  }\n  /**\n   * A method that expands the Mini App to the maximum available height. To find out if the Mini\n   * App is expanded to the maximum height, refer to the value of the `isExpanded`.\n   * @see isExpanded\n   */\n  expand() {\n    this.postEvent(\"web_app_expand\"), this.set(\"isExpanded\", !0);\n  }\n  /**\n   * True if the current viewport height is stable and is not going to change in the next moment.\n   */\n  get isStable() {\n    return this.stableHeight === this.height;\n  }\n}\nconst Ts = l(\n  \"viewport\",\n  async ({ state: e, platform: t, postEvent: s, addCleanup: n }) => {\n    let r = !1, i = 0, o = 0, a = 0;\n    if (e)\n      r = e.isExpanded, i = e.height, o = e.width, a = e.stableHeight;\n    else if ([\"macos\", \"tdesktop\", \"unigram\", \"webk\", \"weba\", \"web\"].includes(t))\n      r = !0, i = window.innerHeight, o = window.innerWidth, a = window.innerHeight;\n    else {\n      const p = await Xt({ timeout: 1e3, postEvent: s });\n      r = p.isExpanded, i = p.height, o = p.width, a = p.isStateStable ? i : 0;\n    }\n    const h = new Cs({\n      postEvent: s,\n      height: i,\n      width: o,\n      stableHeight: a,\n      isExpanded: r\n    });\n    return n(h.listen()), h;\n  }\n);\nfunction P(e, t) {\n  document.documentElement.style.setProperty(e, t);\n}\nfunction Sn(e, t, s) {\n  s || (s = (a) => `--tg-${a}-color`);\n  const n = s(\"header\"), r = s(\"bg\"), i = () => {\n    const { headerColor: a } = e;\n    if (ct(a))\n      P(n, a);\n    else {\n      const { bgColor: h, secondaryBgColor: p } = t;\n      a === \"bg_color\" && h ? P(n, h) : a === \"secondary_bg_color\" && p && P(n, p);\n    }\n    P(r, e.bgColor);\n  }, o = [\n    t.on(\"change\", i),\n    e.on(\"change\", i)\n  ];\n  return i(), () => o.forEach((a) => a());\n}\nfunction Rn(e, t) {\n  t || (t = (n) => `--tg-theme-${n.replace(/[A-Z]/g, (r) => `-${r.toLowerCase()}`)}`);\n  const s = () => {\n    Object.entries(e.getState()).forEach(([n, r]) => {\n      r && P(t(n), r);\n    });\n  };\n  return s(), e.on(\"change\", s);\n}\nfunction xn(e, t) {\n  t || (t = (p) => `--tg-viewport-${p}`);\n  const [\n    s,\n    n,\n    r\n  ] = [\"height\", \"width\", \"stable-height\"].map((p) => t(p)), i = () => P(s, `${e.height}px`), o = () => P(n, `${e.width}px`), a = () => P(r, `${e.stableHeight}px`), h = [\n    e.on(\"change:height\", i),\n    e.on(\"change:width\", o),\n    e.on(\"change:stableHeight\", a)\n  ];\n  return i(), o(), a(), () => h.forEach((p) => p());\n}\nfunction As(e = !0) {\n  const t = [\n    y(\"reload_iframe\", () => {\n      B(\"iframe_will_reload\"), window.location.reload();\n    })\n  ], s = () => t.forEach((n) => n());\n  if (e) {\n    const n = document.createElement(\"style\");\n    n.id = \"telegram-custom-styles\", document.head.appendChild(n), t.push(\n      y(\"set_custom_style\", (r) => {\n        n.innerHTML = r;\n      }),\n      () => document.head.removeChild(n)\n    );\n  }\n  return B(\"iframe_ready\", { reload_supported: !0 }), s;\n}\nfunction ks() {\n  return typeof window > \"u\";\n}\nasync function Cn() {\n  if (It(window))\n    return !0;\n  try {\n    return await w({ method: \"web_app_request_theme\", event: \"theme_changed\", timeout: 100 }), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction Tn(e) {\n  const t = typeof e == \"string\" ? lt(e) : e;\n  Jt(t);\n  function s(r) {\n    if (typeof r == \"string\")\n      try {\n        const { eventType: i } = At(r);\n        i === \"web_app_request_theme\" && et(\"theme_changed\", {\n          theme_params: JSON.parse(Kt(t.themeParams))\n        }), i === \"web_app_request_viewport\" && et(\"viewport_changed\", {\n          width: window.innerWidth,\n          height: window.innerHeight,\n          is_state_stable: !0,\n          is_expanded: !0\n        });\n      } catch {\n      }\n  }\n  if (at()) {\n    const r = window.parent.postMessage.bind(window.parent);\n    window.parent.postMessage = (i) => {\n      s(i), r(i);\n    };\n    return;\n  }\n  if (kt(window)) {\n    const r = window.external.notify.bind(window.external);\n    window.external.notify = (i) => {\n      s(i), r(i);\n    };\n    return;\n  }\n  const n = window.TelegramWebviewProxy;\n  window.TelegramWebviewProxy = {\n    ...n || {},\n    postEvent(...r) {\n      s(JSON.stringify({ eventType: r[0], eventData: r[1] })), n && n.postEvent(...r);\n    }\n  };\n}\nfunction Is(e) {\n  return e instanceof W;\n}\nfunction An(e, t) {\n  return Is(e) && e.type === t;\n}\nfunction J(e, t) {\n  let s, n, r;\n  return typeof e == \"string\" ? s = e : (s = e.pathname === void 0 ? t : e.pathname, n = e.params, r = e.id), Object.freeze({\n    id: r || (Math.random() * 2 ** 14 | 0).toString(16),\n    pathname: s,\n    params: n\n  });\n}\nclass Os {\n  constructor(t, s, n = B) {\n    if (c(this, \"history\"), c(this, \"ee\", new D()), c(this, \"attached\", !1), c(this, \"back\", () => this.go(-1)), c(this, \"on\", this.ee.on.bind(this.ee)), c(this, \"off\", this.ee.off.bind(this.ee)), this._index = s, this.postEvent = n, t.length === 0)\n      throw b(me, \"History should not be empty.\");\n    if (s < 0 || s >= t.length)\n      throw b(\n        ve,\n        \"Index should not be zero and higher or equal than history size.\"\n      );\n    this.history = t.map((r) => J(r, \"\"));\n  }\n  /**\n   * Allows this navigator to control the `BackButton` visibility state. It also tracks the\n   * `BackButton` clicks and calls the `back` method.\n   */\n  attach() {\n    this.attached || (this.attached = !0, this.sync(), y(\"back_button_pressed\", this.back));\n  }\n  /**\n   * Currently active history item.\n   */\n  get current() {\n    return this.history[this.index];\n  }\n  /**\n   * Prevents current navigator from controlling the BackButton visibility state.\n   */\n  detach() {\n    this.attached = !1, z(\"back_button_pressed\", this.back);\n  }\n  /**\n   * Goes to the next history item.\n   */\n  forward() {\n    this.go(1);\n  }\n  /**\n   * Changes currently active history item index by the specified delta. This method doesn't\n   * change index in case, the updated index points to the non-existing history item. This behavior\n   * is preserved until the `fit` argument is specified.\n   * @param delta - index delta.\n   * @param fit - cuts the delta argument to fit the bounds `[0, history.length - 1]`.\n   */\n  go(t, s) {\n    const n = this.index + t, r = Math.min(\n      Math.max(0, n),\n      this.history.length - 1\n    );\n    (n === r || s) && this.replaceAndMove(r, this.history[r]);\n  }\n  /**\n   * Goes to the specified index. Method does nothing in case, passed index is out of bounds.\n   *\n   * If \"fit\" option was specified and index is out of bounds, it will be cut to the nearest\n   * bound.\n   * @param index - target index.\n   * @param fit - cuts the index argument to fit the bounds `[0, history.length - 1]`.\n   */\n  goTo(t, s) {\n    this.go(t - this.index, s);\n  }\n  /**\n   * True if navigator has items before the current item.\n   */\n  get hasPrev() {\n    return this.index > 0;\n  }\n  /**\n   * True if navigator has items after the current item.\n   */\n  get hasNext() {\n    return this.index !== this.history.length - 1;\n  }\n  /**\n   * Currently active history item index.\n   */\n  get index() {\n    return this._index;\n  }\n  /**\n   * Adds a new history item removing all after the current one.\n   * @param item - item to add.\n   */\n  push(t) {\n    this.hasNext && this.history.splice(this.index + 1), this.replaceAndMove(this.index + 1, J(t, this.current.pathname));\n  }\n  /**\n   * Replaces the current history item.\n   * @param item - item to replace the current item with.\n   */\n  replace(t) {\n    this.replaceAndMove(this.index, J(t, this.current.pathname));\n  }\n  /**\n   * Sets history item by the specified index.\n   * @param index - history item index to replace.\n   * @param historyItem - history item to set.\n   */\n  replaceAndMove(t, s) {\n    const n = t - this.index;\n    if (!n && this.current === s)\n      return;\n    const r = this.current;\n    if (this.index !== t) {\n      const i = this._index;\n      this._index = t, this.attached && i > 0 != t > 0 && this.sync();\n    }\n    this.history[t] = s, this.ee.emit(\"change\", {\n      navigator: this,\n      from: r,\n      to: this.current,\n      delta: n\n    });\n  }\n  /**\n   * Actualizes the `BackButton` visibility state.\n   */\n  sync() {\n    this.postEvent(\"web_app_setup_back_button\", { is_visible: !!this.index });\n  }\n}\nfunction F({\n  params: e,\n  ...t\n}) {\n  return { ...e || { hash: \"\", search: \"\" }, ...t };\n}\nfunction U(e) {\n  const t = typeof e == \"string\" ? e.startsWith(\"/\") : !!(e.pathname && e.pathname.startsWith(\"/\")), s = L(e);\n  return `${t ? s.pathname : s.pathname.slice(1)}${s.search}${s.hash}`;\n}\nfunction Q(e, t, s) {\n  let n, r;\n  typeof e == \"string\" ? n = e : (n = U(e), s = e.state, r = e.id);\n  const { pathname: i, search: o, hash: a } = new URL(n, `http://a${M(t, \"/\")}`);\n  return { id: r, pathname: i, params: { hash: a, search: o, state: s } };\n}\nasync function N(e) {\n  return e === 0 ? !0 : Promise.race([\n    new Promise((t) => {\n      const s = tt(\"popstate\", () => {\n        s(), t(!0);\n      });\n      window.history.go(e);\n    }),\n    // Usually, it takes about 1ms to emit this event, but we use some buffer.\n    new Promise((t) => {\n      setTimeout(t, 50, !1);\n    })\n  ]);\n}\nasync function qs() {\n  if (window.history.length <= 1 || (window.history.pushState(null, \"\"), await N(1 - window.history.length)))\n    return;\n  let e = await N(-1);\n  for (; e; )\n    e = await N(-1);\n}\nfunction te(e) {\n  return L(e).pathname;\n}\nconst Et = 0, Y = 1, Z = 2;\nclass ee {\n  constructor(t, s, { postEvent: n, hashMode: r = \"classic\", base: i } = {}) {\n    c(this, \"navigator\"), c(this, \"ee\", new D()), c(this, \"hashMode\"), c(this, \"base\"), c(this, \"attached\", !1), c(this, \"onPopState\", ({ state: o }) => {\n      if (o === null)\n        return this.push(this.parsePath(window.location.href));\n      o === Et ? window.history.forward() : o === Y && this.back(), o === Z && this.forward();\n    }), c(this, \"onNavigatorChange\", async ({\n      to: o,\n      from: a,\n      delta: h\n    }) => {\n      this.attached && await this.syncHistory(), this.ee.emit(\"change\", {\n        delta: h,\n        from: F(a),\n        to: F(o),\n        navigator: this\n      });\n    }), c(this, \"on\", this.ee.on.bind(this.ee)), c(this, \"off\", this.ee.off.bind(this.ee)), this.navigator = new Os(\n      t.map((o) => Q(o, \"/\")),\n      s,\n      n\n    ), this.navigator.on(\"change\", (o) => {\n      this.onNavigatorChange(o);\n    }), this.hashMode = r, this.base = te(i || \"\");\n  }\n  /**\n   * Attaches current navigator to the browser history allowing navigator to manipulate it.\n   */\n  async attach() {\n    this.attached || (this.attached = !0, this.navigator.attach(), window.addEventListener(\"popstate\", this.onPopState), await this.syncHistory());\n  }\n  /**\n   * Goes back in history by 1.\n   */\n  back() {\n    this.navigator.back();\n  }\n  /**\n   * Detaches current navigator from the browser history.\n   */\n  detach() {\n    this.attached = !1, this.navigator.detach(), window.removeEventListener(\"popstate\", this.onPopState);\n  }\n  /**\n   * Goes forward in history.\n   */\n  forward() {\n    return this.navigator.forward();\n  }\n  /**\n   * Current history cursor.\n   */\n  get index() {\n    return this.navigator.index;\n  }\n  /**\n   * Current history item identifier.\n   */\n  get id() {\n    return this.navigator.current.id;\n  }\n  /**\n   * Changes currently active history item index by the specified delta. This method doesn't\n   * change index in case, the updated index points to the non-existing history item. This behavior\n   * is preserved until the `fit` argument is specified.\n   * @param delta - index delta.\n   * @param fit - cuts the delta argument to fit the bounds `[0, history.length - 1]`.\n   */\n  go(t, s) {\n    return this.navigator.go(t, s);\n  }\n  /**\n   * Goes to the specified index. Method does nothing in case, passed index is out of bounds.\n   *\n   * If \"fit\" option was specified and index is out of bounds, it will be cut to the nearest\n   * bound.\n   * @param index - target index.\n   * @param fit - cuts the index argument to fit the bounds `[0, history.length - 1]`.\n   */\n  goTo(t, s) {\n    this.navigator.goTo(t, s);\n  }\n  /**\n   * Current history item hash.\n   * @see URL.hash\n   * @example\n   * \"\", \"#my-hash\"\n   */\n  get hash() {\n    return (this.navigator.current.params || {}).hash || \"\";\n  }\n  /**\n   * True if navigator has items before the current item.\n   */\n  get hasPrev() {\n    return this.navigator.hasPrev;\n  }\n  /**\n   * True if navigator has items after the current item.\n   */\n  get hasNext() {\n    return this.navigator.hasNext;\n  }\n  /**\n   * Navigation history.\n   */\n  get history() {\n    return this.navigator.history.map(F);\n  }\n  /**\n   * Path, including pathname, search and hash.\n   * @example Pathname only.\n   * \"/pathname\"\n   * @example Pathname + search.\n   * \"/pathname?search\"\n   * @example Pathname + hash.\n   * \"/pathname#hash\"\n   * @example Pathname + search + hash.\n   * \"/pathname?search#hash\"\n   */\n  get path() {\n    return U(this);\n  }\n  /**\n   * Current pathname. Always starts with the slash.\n   * @see URL.pathname\n   * @example\n   * \"/\", \"/abc\"\n   */\n  get pathname() {\n    return this.navigator.current.pathname;\n  }\n  /**\n   * Depending on the current navigation type, parses incoming path and returns it presented as\n   * an object. In other words, this method parses the passed path and returns object, describing\n   * how the navigator \"sees\" it.\n   *\n   * @example Hash mode is omitted.\n   * parsePath('/abc?a=1#hash');\n   * // { pathname: '/abc', search: '?a=1', hash: '#hash' }\n   * parsePath('http://example.com/abc?a=1#hash');\n   * // { pathname: '/abc', search: '?a=1', hash: '#hash' }\n   *\n   * @example Hash mode is enabled.\n   * parsePath('/abc?a=1#tma?is=cool#yeah');\n   * // { pathname: '/tma', search: '?is=cool', hash: '#yeah' }\n   * parsePath('http://example.com/abc?a=1#tma?is=cool#yeah');\n   * // { pathname: '/tma', search: '?is=cool', hash: '#yeah' }\n   */\n  parsePath(t) {\n    let s = L(t);\n    return this.hashMode && (s = L(s.hash.slice(1))), {\n      pathname: s.pathname,\n      search: s.search,\n      hash: s.hash\n    };\n  }\n  push(t, s) {\n    const n = Q(t, this.path), { state: r = s } = n.params;\n    this.navigator.push({ ...n, params: { ...n.params, state: r } });\n  }\n  replace(t, s) {\n    const n = Q(t, this.path), { state: r = s } = n.params;\n    this.navigator.replace({ ...n, params: { ...n.params, state: r } });\n  }\n  /**\n   * Combines the navigator `base` property with the passed path data applying the navigator\n   * navigation mode.\n   * @param value - path presented as string or URLLike.\n   */\n  renderPath(t) {\n    const s = (this.base.length === 1 ? \"\" : this.base) + M(U(t), \"/\");\n    return this.hashMode ? M(s.slice(1), this.hashMode === \"classic\" ? \"#\" : \"#/\") : s;\n  }\n  /**\n   * Synchronizes current navigator state with browser history.\n   */\n  async syncHistory() {\n    window.removeEventListener(\"popstate\", this.onPopState);\n    const { state: t } = this, s = this.renderPath(this);\n    await qs(), this.hasPrev && this.hasNext ? (window.history.replaceState(Y, \"\"), window.history.pushState(t, \"\", s), window.history.pushState(Z, \"\"), await N(-1)) : this.hasPrev ? (window.history.replaceState(Y, \"\"), window.history.pushState(t, \"\", s)) : this.hasNext ? (window.history.replaceState(t, s), window.history.pushState(Z, \"\"), await N(-1)) : (window.history.replaceState(Et, \"\"), window.history.pushState(t, \"\", s)), window.addEventListener(\"popstate\", this.onPopState);\n  }\n  /**\n   * Current query parameters.\n   * @see URL.search\n   * @example\n   * \"\", \"?\", \"?a=1\"\n   */\n  get search() {\n    return (this.navigator.current.params || {}).search || \"\";\n  }\n  /**\n   * Current history item state.\n   */\n  get state() {\n    return (this.navigator.current.params || {}).state;\n  }\n}\nfunction Vs(e) {\n  e || (e = {});\n  const { href: t, hash: s } = window.location;\n  let n = U(\n    e.hashMode === null ? t : s.includes(\"?\") ? s.slice(1) : `?${s.slice(1)}`\n  );\n  const r = e.base ? te(e.base) : void 0;\n  if (r) {\n    if (!n.startsWith(r))\n      throw b(\n        ye,\n        `Path \"${n}\" expected to be starting with \"${r}\"`\n      );\n    n = n.slice(r.length);\n  }\n  return new ee([n], 0, e);\n}\nfunction kn(e) {\n  const t = e.match(/#(.+)/);\n  return t ? t[1] : null;\n}\nfunction Ns(e, t) {\n  if (Ft()) {\n    const s = sessionStorage.getItem(e);\n    if (s)\n      try {\n        const { index: n, history: r } = JSON.parse(s);\n        return new ee(\n          r,\n          n,\n          t\n        );\n      } catch (n) {\n        console.error(\"Unable to restore hash navigator state.\", n);\n      }\n  }\n  return Vs(t);\n}\nfunction In(e, t) {\n  const s = Ns(e, t), n = () => sessionStorage.setItem(e, JSON.stringify({\n    index: s.index,\n    history: s.history\n  }));\n  return s.on(\"change\", n), n(), s;\n}\nfunction d(e, t) {\n  function s(n) {\n    return function(i, o, a) {\n      return (h) => {\n        const p = {\n          ...h,\n          [i]: n(o)\n        };\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a, { ...p });\n      };\n    };\n  }\n  return [s(e), s(t)];\n}\nconst se = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(void 0);\nfunction Ds() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(se);\n  if (!e)\n    throw new Error(\"useSDK was used outside the SDKProvider.\");\n  return e;\n}\nfunction _(e) {\n  function t(n) {\n    const r = Ds(), [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n      n ? void 0 : () => {\n        if (ks())\n          throw new Error(\"Using hooks on the server side, you must explicitly specify ssr = true option\");\n        return r.use(e);\n      }\n    );\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      o(r.use(e));\n    }, [r]), i;\n  }\n  function s(n) {\n    const r = t(n);\n    if (r) {\n      if (\"error\" in r)\n        throw r.error;\n      return r.result;\n    }\n  }\n  return [t, s];\n}\nconst [Bs, Ms] = _(je), [On, qn] = d(\n  Bs,\n  Ms\n), [Ls, $s] = _(Je), [Vn, Nn] = d(\n  Ls,\n  $s\n), [Hs, Us] = _(Qe), [Dn, Bn] = d(\n  Hs,\n  Us\n), [Ws, Gs] = _(es), [Mn, Ln] = d(\n  Ws,\n  Gs\n), [js, zs] = _(ns), [$n, Hn] = d(\n  js,\n  zs\n), [Ks, Js] = _(is), [Un, Wn] = d(Ks, Js), [Fs, Qs] = _(as), [Gn, jn] = d(Fs, Qs), [Ys, Zs] = _(hs), [zn, Kn] = d(Ys, Zs), [Xs, tn] = _(ds), [Jn, Fn] = d(Xs, tn), [en, sn] = _(gs), [Qn, Yn] = d(en, sn), [nn, rn] = _(bs), [Zn, Xn] = d(nn, rn), [on, an] = _(vs), [tr, er] = d(\n  on,\n  an\n), [cn, hn] = _(Es), [sr, nr] = d(\n  cn,\n  hn\n), [pn, un] = _(Ss), [rr, ir] = d(pn, un);\nfunction or(e) {\n  const [t, s] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => e ? void 0 : nt());\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    e && s(nt());\n  }, []), t;\n}\nconst [ln, dn] = _(xs), [ar, cr] = d(ln, dn), [_n, wn] = _(Ts), [hr, pr] = d(_n, wn);\nfunction ur({ children: e, acceptCustomStyles: t, debug: s }) {\n  const n = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!0), [r, i] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(/* @__PURE__ */ new Map()), o = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(r), a = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (p) => {\n      n.current && i((C) => (p && p(C), new Map(C)));\n    },\n    []\n  ), h = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({\n    use(p, ...C) {\n      const wt = r.get(p);\n      if (wt)\n        return wt;\n      let m, K;\n      try {\n        m = p(...C);\n      } catch (g) {\n        K = g;\n      }\n      function H(g) {\n        return r.set(p, g), g;\n      }\n      if (K)\n        return H({ error: K });\n      let I;\n      if (Array.isArray(m) && (I = m[1], m = m[0]), !m)\n        return H({ result: m, cleanup: I });\n      function gt(g) {\n        if (\"on\" in g) {\n          const O = g.on(\"change\", () => a()), ft = I;\n          I = () => {\n            ft && ft(), O();\n          };\n        }\n        return { result: g, cleanup: I };\n      }\n      return m instanceof Promise ? (m.then(\n        (g) => a((O) => O.set(p, gt(g))),\n        (g) => a((O) => O.set(p, { error: g }))\n      ), H({})) : H(gt(m));\n    }\n  }), [r]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (n.current = !0, () => {\n    n.current = !1;\n  }), []), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (at())\n      return As(t);\n  }, [t]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    ue(s || !1);\n  }, [s]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    o.current = r;\n  }, [r]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => () => {\n    o.current.forEach((p) => {\n      \"cleanup\" in p && p.cleanup && p.cleanup();\n    });\n  }, []), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(se.Provider, { value: h, children: e });\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@telegram-apps/sdk-react/dist/index.js\n"));

/***/ })

});